{"": "None", "\u041f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435": "\nprint('\u041f\u0440\u0438\u0432\u0435\u0442, \u042f\u043d\u0434\u0435\u043a\u0441!')", "\u0417\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e": "\nprint('\u041f\u0440\u0438\u0432\u0435\u0442, \u042f\u043d\u0434\u0435\u043a\u0441!')\nprint('\u041f\u0440\u0438\u044f\u0442\u043d\u043e \u043f\u043e\u0437\u043d\u0430\u043a\u043e\u043c\u0438\u0442\u044c\u0441\u044f.')", "\u042d\u0445\u043e-1": "\na = '\u0410\u0443\u0443\u0443\u0443!'\nprint(a)\nprint(a)", "\u042d\u0445\u043e-1.1": "\nkirill_is_bad = '\u0410\u0443\u0443\u0443\u0443\u0443\u0443!'\nprint(kirill_is_bad)\nprint(kirill_is_bad)\n", "\u0412\u0437\u043b\u043e\u043c \u00ab\u043f\u043b\u0430\u043d\u0435\u0442\u043d\u043e\u0439\u00bb \u0443\u0433\u0430\u0434\u0430\u0439\u043a\u0438": "\nprint(planet)", "\u041f\u043e\u043f\u0443\u0433\u0430\u0439": "\ns_1 = input()\ns_2 = input()\ns_3 = input()\nprint(s_1)\nprint(s_2)\nprint(s_3)\n", "\u0411\u0438\u043b\u0435\u0442\u043d\u0430\u044f \u043a\u0430\u0441\u0441\u0430": "\nfilm = input()\ncinema = input()\ntime = input()\nprint('\u0411\u0438\u043b\u0435\u0442 \u043d\u0430 \"', film, '\" \u0432 \"', cinema, '\" \u043d\u0430', time, '\u0437\u0430\u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d.')\n", "\u041e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043f\u043e\u043f\u0443\u0433\u0430\u0439": "\ns_1 = input()\ns_2 = input()\ns_3 = input()\nprint(s_3)\nprint(s_2)\nprint(s_1)", "\u0411\u0438\u0442 \u0438\u043b\u0438 \u043d\u0435 \u0431\u0438\u0442?": "\nprint('1 \u0431\u0438\u0442 - \u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u0430\u044f \u0435\u0434\u0438\u043d\u0438\u0446\u0430 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438.')\nprint('1 \u0431\u0430\u0439\u0442 = 8 \u0431\u0438\u0442.')\nprint('1 \u041a\u0438\u043b\u043e\u0431\u0438\u0442 = 1024 \u0431\u0438\u0442\u0430.')\nprint('1 \u041a\u0438\u043b\u043e\u0431\u0430\u0439\u0442 = 1024 \u0431\u0430\u0439\u0442\u0430.')\nprint('1 \u041a\u0438\u043b\u043e\u0431\u0430\u0439\u0442 =', 8 * 1024, '\u0431\u0438\u0442.')", "\u0413\u043e\u0440\u043e\u0441\u043a\u043e\u043f": "\n              name = input()\nsername = input()\nanimale = input()\nzodak = input()\nprint('\u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0439 \u0433\u043e\u0440\u043e\u0441\u043a\u043e\u043f \u0434\u043b\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f', name, sername)\nprint('\u041a\u0435\u043c \u0432\u044b \u0431\u044b\u043b\u0438 \u0432 \u043f\u0440\u043e\u0448\u043b\u043e\u0439 \u0436\u0438\u0437\u043d\u0438:', animale)\nprint('\u0412\u0430\u0448 \u0437\u043d\u0430\u043a \u0437\u043e\u0434\u0438\u0430\u043a\u0430 -', zodak, ', \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u0432\u044b - \u0442\u043e\u043d\u043a\u043e \u0447\u0443\u0432\u0441\u0442\u0432\u0443\u044e\u0449\u0430\u044f \u043d\u0430\u0442\u0443\u0440\u0430.')", "\u041e\u0442\u0447\u0435\u0442 \u043e \u043f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438": "\nprint('\u041c\u043e\u044f \u043f\u0435\u0440\u0432\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430 \u043d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u043b\u0430 \"\u041f\u0440\u0438\u0432\u0435\u0442, \u042f\u043d\u0434\u0435\u043a\u0441!\" :)')", "\u042d\u0445\u043e-1.2": "\nfraza = '\u0410\u0443\u0443\u0443\u0443!'\nprint('\u0427\u0435\u043b\u043e\u0432\u0435\u043a:', fraza)\nprint('\u042d\u0445\u043e:', fraza) ", "\u0412\u0437\u043b\u043e\u043c \u043f\u043b\u0430\u043d\u0435\u0442\u043d\u043e\u0439 \u0443\u0433\u0430\u0434\u0430\u0439\u043a\u0438 \u2014 2": "\nplanet = input()", "\u0412\u0437\u043b\u043e\u043c \u043f\u043b\u0430\u043d\u0435\u0442\u043d\u043e\u0439 \u0443\u0433\u0430\u0434\u0430\u0439\u043a\u0438 \u2014 3": "\nplanet = answer", "\u0422\u0430\u043a\u0441\u043e\u043d\u043e\u043c\u0438\u044f \u0436\u0438\u0432\u043e\u0439 \u043f\u0440\u0438\u0440\u043e\u0434\u044b": "\nclass Acellularia:\n    pass\n\n\nclass Cellularia:\n    pass\n\n\nclass Prokaryota(Cellularia):\n    pass\n\n\nclass Eukaryota(Cellularia):\n    pass\n\n\nclass Unicellularia(Eukaryota):\n    pass\n\n\nclass Fungi(Eukaryota):\n    pass\n\n\nclass Plantae(Eukaryota):\n    pass\n\n\nclass Animalia(Eukaryota):\n    pass", "\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0438 \u042f\u043d\u0434\u0435\u043a\u0441.\u041b\u0438\u0446\u0435\u044f": "\nclass User:\n    def solve(self, n):\n        pass\n\n\nclass Student(User):\n    pass\n\n\nclass Teacher(User):\n    def check_solution(self, user, n):\n        pass\n\n\nclass Admin(User):\n    def edit(self, n):\n        pass\n\n\nclass SuperAdmin(Admin):\n    def grant(self, user):\n        pass\n    ", "Minecraft": "\nclass BaseObject:\n\n    def __init__(self, x, y, z):\n        self._x = x\n        self._y = y\n        self._z = z\n\n    def get_coordinates(self):\n        return [self._x, self._y, self._z]\n\n\nclass Block(BaseObject):\n    def __init__(self, x, y, z):\n        super().__init__(x, y, z)\n\n    def shatter(self) -> None:\n        self._x = None\n        self._y = None\n        self._z = None\n\n\nclass Entity(BaseObject):\n    def __init__(self, x, y, z):\n        super().__init__(x, y, z)\n\n    def move(self, x, y, z):\n        self._x = x\n        self._y = y\n        self._z = z\n\n\nclass Thing(BaseObject):\n    def __init__(self, x, y, z):\n        super().__init__(x, y, z)", "\u0421\u043e\u0446\u0438\u0430\u043b\u044c\u043d\u0430\u044f \u0441\u0435\u0442\u044c": "\nclass User:\n    def __init__(self, name):\n        self._name = name\n\n    def send_message(self, user, message):\n        pass\n\n    def post(self, message):\n        pass\n\n    def info(self):\n        return ''\n\n    def describe(self):\n        print(User.info())\n\n\nclass Person(User):\n    def __init__(self, name, dob):\n        self._name = name\n        self._dob = dob\n\n    def info(self):\n        return '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f ' + str(self._dob)\n\n    def subscribe(self, user):\n        return '\u0414\u0430\u0442\u0430 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f ' + str(user._dob)\n\n\nclass Community(User):\n    def __init__(self, name, opis):\n        self._name = name\n        self._opis = opis\n\n    def info(self):\n        return \"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435: \" + str(self._opis)", "\u041a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u043a\u0430\u0446\u0438\u044f \u0436\u0438\u0432\u043e\u0442\u043d\u044b\u0445": "\nfrom __future__ import annotations\n\n\nclass Animal:\n\n    def breathe(self: Animal) -> None:\n        pass\n\n    def eat(self: Animal) -> None:\n        pass\n\n\nclass Fish(Animal):\n    def swim(self: Fish) -> None:\n        pass\n\n\nclass Bird(Animal):\n    def lay_eggs(self: Bird) -> None:\n        pass\n\n\nclass FlyingBird(Bird):\n    def fly(self: FlyingBird) -> None:\n        pass", "\u0413\u0435\u043e\u043c\u0435\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0438\u0433\u0443\u0440\u044b \u2013 2": "\nclass Shape:\n    pass\n\n\nclass Polygon(Shape):\n    pass\n\n\nclass Triangle(Polygon):\n    pass\n\n\nclass IsoscelesTriangle(Triangle):\n    pass\n\n\nclass EquilateralTriangle(IsoscelesTriangle):\n    pass\n\n\nclass Quadrilateral(Polygon):\n    pass\n\n\nclass Parallelogram(Quadrilateral):\n    pass\n\n\nclass Rectangle(Parallelogram):\n    pass\n\n\nclass Square(Rectangle):\n    pass", "\u0418\u0435\u0440\u0430\u0440\u0445\u0438\u044f \u0442\u0440\u0430\u043d\u0441\u043f\u043e\u0440\u0442\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432": "\nfrom __future__ import annotations\n\n\nclass Transport:\n    pass\n\n\nclass Fly(Transport):\n    pass\n\n\nclass Water(Transport):\n    pass\n\n\nclass Ground(Transport):\n    pass\n\n\nclass Space(Transport):\n    pass\n\n\nclass Plane(fly):\n    pass\n\n\nclass Aeronautics(fly):\n    pass\n\n\nclass Railway(Ground):\n    pass\n\n\nclass Automotive(Ground):\n    pass\n\n\nclass Bicycle(Ground):\n    pass\n\n\nclass DrivenByAnimals(Ground):\n    pass\n\n\nclass Legs(DrivenByAnimals):\n    pass\n\n\nclass Mother(DrivenByAnimals):\n    pass\n\n\nclass KicksInTheSas(DrivenByAnimals):\n    pass\n\n\nclass AWagonWithNegroes(DrivenByAnimals):\n    pass\n", "\u041c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u043a\u043e\u043b\u043e\u043a\u043e\u043b\u044c\u0447\u0438\u043a": "\nclass LittleBell:\n    def sound(self):\n        print('ding')", "\u041a\u043d\u043e\u043f\u043a\u0430": "\nclass Button:\n\n    def __init__(self):\n        self.c = 0\n\n    def click(self):\n        self.c += 1\n\n    def click_count(self):\n        return self.c \n\n    def reset(self):\n        self.c = 0", "\u0412\u0435\u0441\u044b": "\nclass Balance:\n    def __init__(self):\n        self.left = 0\n        self.r = 0\n\n    def add_left(self, num):\n        self.left += num\n\n    def add_right(self, num):\n        self.r += num\n\n    def result(self):\n        if self.left == self.r:\n            return \"=\"\n        elif self.left > self.r:\n            return \"L\"\n        return \"R\"", "\u0420\u0430\u0437\u0431\u0438\u0432\u043a\u0430 \u043f\u043e \u0447\u0451\u0442\u043d\u043e\u0441\u0442\u0438": "\nclass OddEvenSeparator:\n\n    def __init__(self):\n        self.odd_list = []\n        self.even_list = []\n\n    def add_number(self, number):\n        if number % 2 == 0:\n            self.even_list.append(number)\n        else:\n            self.odd_list.append(number)\n\n    def even(self):\n        return self.even_list\n\n    def odd(self):\n        return self.odd_list\n", "\u0411\u043e\u043b\u044c\u0448\u043e\u0439 \u043a\u043e\u043b\u043e\u043a\u043e\u043b\u044c\u0447\u0438\u043a": "\nclass BigBell:\n    def __init__(self):\n        self.moda = 1\n\n    def sound(self):\n        if self.moda % 2 == 1:\n            print(\"ding\")\n        else:\n            print(\"dong\")\n        self.moda += 1", "\u0421\u0430\u043c\u044b\u0435 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0435 \u0438 \u0441\u0430\u043c\u044b\u0435 \u0434\u043b\u0438\u043d\u043d\u044b\u0435 \u0441\u043b\u043e\u0432\u0430": "\nclass MinMaxWordFinder:\n\n    def __init__(self):\n        self.minlong = ['VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV']\n        self.maxlong = ['']\n\n    def add_sentence(self, text):\n        for elem in text.split():\n            if len(elem) > len(self.maxlong[0]):\n                self.maxlong.clear()\n                self.maxlong.append(elem)\n            elif len(elem) == len(self.maxlong[0]):\n                self.maxlong.append(elem)\n\n            if len(elem) < len(self.minlong[0]):\n                self.minlong.clear()\n                self.minlong.append(elem)\n            elif len(elem) == len(self.minlong[0]):\n                self.minlong.append(elem)\n\n    def shortest_words(self):\n        if self.minlong != ['VVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVVV']:\n            return sorted(list(self.minlong))\n        return ''\n\n    def longest_words(self):\n        return sorted(list(set(self.maxlong)))", "\u041e\u0433\u0440\u0430\u043d\u0438\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0439 \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a": "\nclass BoundingRectangle:\n    w = 0\n    h = 0\n    b = None\n    t = None\n    le = None\n    r = None\n\n    def add_point(self, x, y):\n        if self.b is None:\n            self.b, self.t = y, y\n            self.le, self.r = x, x\n        else:\n            self.b = min(self.b, y)\n            self.t = max(self.t, y)\n            self.r = max(self.r, x)\n            self.le = min(self.le, x)\n\n        self.h = self.t - self.b\n        self.w = self.r - self.le\n\n    def width(self):\n        return self.w\n\n    def height(self):\n        return self.h\n\n    def bottom_y(self):\n        return self.b\n\n    def top_y(self):\n        return self.t\n\n    def left_x(self):\n        return self.le\n\n    def right_x(self):\n        return self.r", "\u041c\u043e\u0440\u0441\u043a\u043e\u0439 \u0431\u043e\u0439": "\nclass SeaMap:\n    def __init__(self):\n        self.matrix = [['.' for _ in range(10)] for _ in range(10)]  # \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u043b\u044f\n\n    def shoot(self, row, col, result):\n        if result == 'miss':\n            self.matrix[row][col] = '*'\n        elif result == 'hit':\n            self.matrix[row][col] = 'x'\n        elif result == 'sink':\n            for i in range(row - 1, row + 2):\n                for j in range(col - 1, col + 2):\n                    if 0 <= i < 10 and 0 <= j < 10:\n                        if self.matrix[i][j] == '.':\n                            self.matrix[i][j] = '*'\n            self.matrix[row][col] = 'x'\n            for j in range(len(self.matrix)):\n                if self.matrix[row][j] == 'x':\n                    col = j\n                    for i in range(row - 1, row + 2):\n                        for u in range(col - 1, col + 2):\n                            if 0 <= i < 10 and 0 <= u < 10:\n                                if self.matrix[i][u] == '.':\n                                    self.matrix[i][u] = '*'\n            for v in range(len(self.matrix)):\n                if self.matrix[v][col] == 'x':\n                    row = v\n                    for v in range(row - 1, row + 2):\n                        for u in range(col - 1, col + 2):\n                            if 0 <= v < 10 and 0 <= u < 10:\n                                if self.matrix[v][u] == '.':\n                                    self.matrix[v][u] = '*'\n\n    def cell(self, row, col):\n        return self.matrix[row][col]", "\u041a\u043b\u0430\u0441\u0441 \u043a\u0440\u0435\u0441\u0442\u0438\u043a\u0438-\u043d\u043e\u043b\u0438\u043a\u0438": "\nclass TicTacToeBoard:\n    def __init__(self):\n        self.matrix = [['-' for _ in range(3)] for _ in range(3)]\n        self.hod = 1\n        self.fllag = 0\n\n    def check_field(self):\n        for i in range(3):\n            if self.matrix[i][0] == self.matrix[i][1] == self.matrix[i][2] and self.matrix[i][0] != '-':\n                if self.matrix[i][0] == 'X':\n                    return 'X'\n                return '0'\n\n        for j in range(3):\n            if self.matrix[0][j] == self.matrix[1][j] == self.matrix[2][j] and self.matrix[0][j] != '-':\n                if self.matrix[0][j] == 'X':\n                    return 'X'\n                return '0'\n\n        if self.matrix[0][0] == self.matrix[1][1] == self.matrix[2][2] and self.matrix[0][0] != '-':\n            if self.matrix[0][0] == 'X':\n                return 'X'\n            return '0'\n\n        if self.matrix[0][2] == self.matrix[1][1] == self.matrix[2][0] and self.matrix[0][2] != '-':\n            if self.matrix[0][0] == 'X':\n                return 'X'\n            return '0'\n\n        fag = 0\n        for i in range(3):\n            for j in range(3):\n                if self.matrix[j][i] != '-':\n                    fag += 1\n        if fag == 0:\n            return \"D\"\n\n        return None\n\n    def new_game(self):\n        self.matrix = [['-' for _ in range(3)] for _ in range(3)]\n        self.hod = 1\n\n    def get_field(self):\n        return self.matrix\n\n    def make_move(self, row, col):\n        if self.fllag == 1:\n            return \"\u0418\u0433\u0440\u0430 \u0443\u0436\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430\"\n\n        if self.hod == 1:\n            flag = 0\n            while flag != 1:\n                if self.matrix[row - 1][col - 1] == '-':\n                    self.matrix[row - 1][col - 1] = \"X\"\n                    flag += 1\n                else:\n                    return \"\u041a\u043b\u0435\u0442\u043a\u0430 \" + str(row) + ', ' + str(col) + ' \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u0430'\n        if self.hod == 2:\n            flag = 0\n            while flag != 1:\n                if self.matrix[row - 1][col - 1] == '-':\n                    self.matrix[row - 1][col - 1] = \"0\"\n                    flag += 1\n                else:\n                    return \"\u041a\u043b\u0435\u0442\u043a\u0430 \" + str(row) + ', ' + str(col) + ' \u0443\u0436\u0435 \u0437\u0430\u043d\u044f\u0442\u0430'\n        self.hod %= 2\n        self.hod += 1\n\n        for i in range(3):\n            if self.matrix[i][0] == self.matrix[i][1] == self.matrix[i][2] and self.matrix[i][0] != '-':\n                self.fllag += 1\n                if self.matrix[i][0] == 'X':\n                    return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a X'\n                return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a 0'\n\n        for j in range(3):\n            if self.matrix[0][j] == self.matrix[1][j] == self.matrix[2][j] and self.matrix[0][j] != '-':\n                self.fllag += 1\n                if self.matrix[0][j] == 'X':\n                    return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a X'\n                return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a 0'\n\n        if self.matrix[0][0] == self.matrix[1][1] == self.matrix[2][2] and self.matrix[0][0] != '-':\n            self.fllag += 1\n            if self.matrix[0][0] == 'X':\n                return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a X'\n            return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a 0'\n\n        if self.matrix[0][2] == self.matrix[1][1] == self.matrix[2][0] and self.matrix[0][2] != '-':\n            self.fllag += 1\n            if self.matrix[0][0] == 'X':\n                return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a X'\n            return '\u041f\u043e\u0431\u0435\u0434\u0438\u043b \u0438\u0433\u0440\u043e\u043a 0'\n\n        fag = 0\n        for i in range(3):\n            for j in range(3):\n                if self.matrix[j][i] != '-':\n                    fag += 1\n        if fag == 0:\n            self.fllag += 1\n            return \"\u041d\u0438\u0447\u044c\u044f\"\n\n        if self.fllag == 0:\n            return \"\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0435\u043c \u0438\u0433\u0440\u0430\u0442\u044c\"\n        else:\n            return \"\u0418\u0433\u0440\u0430 \u0443\u0436\u0435 \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430\"", "\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u0442\u044c \u0432\u0441\u0451": "\nprint(input(), '? \u041a\u043e\u043d\u0435\u0447\u043d\u043e, \u043f\u043e\u043c\u043d\u044e, \u0432\u0435\u0434\u044c \u043c\u044b \u043f\u0440\u043e\u0445\u043e\u0434\u0438\u043b\u0438 \u044d\u0442\u043e \u043d\u0430 \u043f\u0440\u043e\u0448\u043b\u043e\u043c \u0437\u0430\u043d\u044f\u0442\u0438\u0438!')", "\u0422\u043e\u043b\u044c\u043a\u043e \u041f\u0438\u0442\u043e\u043d!": "\nif input() == 'Python':\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u0401\u043b\u043e\u0447\u043a\u0430, \u0433\u043e\u0440\u0438!": "\nif input() == '\u0440\u0430\u0437' and input() == '\u0434\u0432\u0430' and input() == '\u0442\u0440\u0438':\n    print('\u0413\u041e\u0420\u0418')\nelse:\n    print('\u041d\u0415 \u0413\u041e\u0420\u0418')", "\u0401\u043b\u043e\u0447\u043a\u0430-2": "\ns_1 = input()\ns_2 = input()\ns_3 = input()\nif (s_1 == '\u0440\u0430\u0437' and s_2 == '\u0434\u0432\u0430' and s_3 == '\u0442\u0440\u0438') or (s_1 == '1' and s_2 == '2' and s_3 == '3'):\n    print('\u0413\u041e\u0420\u0418')\nelse:\n    print('\u041d\u0415 \u0413\u041e\u0420\u0418')", "\u0401\u043b\u043e\u0447\u043a\u0430-3": "\ns_1 = input()\ns_2 = input()\ns_3 = input()\nif(((s_1 == '\u0440\u0430\u0437' or s_1 == '\u043e\u0434\u0438\u043d') and s_2 == '\u0434\u0432\u0430' and s_3 == '\u0442\u0440\u0438') or \n   (s_1 == '1' and s_2 == '2' and s_3 == '3')):\n    print('\u0413\u041e\u0420\u0418')\nelse:\n    print('\u041d\u0415 \u0413\u041e\u0420\u0418')", "\u041b\u0438\u0447\u043d\u043e\u0441\u0442\u043d\u044b\u0439 \u0442\u0435\u0441\u0442": "\nprint('\u043e\u0442\u0432\u0435\u0447\u0430\u0439\u0442\u0435 \u0434\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442')\nprint('\u0431\u0430\u0445\u043d\u0435\u043c 24 \u044d\u043d\u0435\u0440\u0433\u0435\u0442\u0438\u043a\u0430?')\nan_1 = input()\nif an_1 == '\u0434\u0430':\n    print('2D \u0434\u0435\u0432\u043e\u0447\u043a\u0438 \u043b\u0443\u0447\u0448\u0435 3D?')\n    an_2 = input()\n    if an_2 == '\u0434\u0430':\n        print('\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e, \u0432\u044b \u0434\u0435\u0434 \u0438\u043d\u0441\u0430\u0439\u0434')\n    elif an_2 == '\u043d\u0435\u0442':\n        print('\u041f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u044e, \u0432\u044b \u043f\u043e\u0434 \u0441\u043f\u0438\u0434\u0430\u043c\u0438!!!!')\n    else:\n        print('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')\nelif an_1 == '\u043d\u0435\u0442':\n    print('\u0431\u0443\u0434\u0435\u043c \u0432\u0437\u0440\u044b\u0432\u0430\u0442\u044c \u043f\u0435\u0442\u0430\u0440\u0434\u044b?')\n    an_2 = input()\n    if an_2 == '\u0434\u0430':\n        print('\u0441 \u0434\u043d\u0451\u043c \u0442\u0435\u0440\u0440\u043e\u0440\u0438\u0437\u043c\u0430!')\n    elif an_2 == '\u043d\u0435\u0442':\n        print('\u0432\u044b \u0441\u043a\u0443\u0447\u043d\u044b\u0439....')\n    else:\n        print('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')\nelse:\n    print('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')", "\u042d\u0445\u043e-2": "\nprint(input() * 4)", "\u041c\u044f\u0443": "\nif '\u043a\u043e\u0442' in input():\n    print('\u041c\u042f\u0423')\nelse:\n    print('\u0413\u0410\u0412')", "\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043f\u043e\u0447\u0442\u044b": "\nlogin = input()\nmail = input()\nif '@' not in login and '@' in mail:\n    print('OK')\nelif '@' in login:\n    print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u043b\u043e\u0433\u0438\u043d')\nelse:\n    print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0430\u0434\u0440\u0435\u0441')", "\u041b\u0430\u0431\u0438\u0440\u0438\u043d\u0442": "\nprint('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')\n\nprint('\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u0435.\u041c\u043e\u0436\u043d\u043e \u043f\u043e\u0439\u0442\u0438 \"\u043d\u0430 \u0443\u043b\u0438\u0446\u0443\", \u0432 \"\u043a\u0443\u0445\u043d\u044e\" \u0438\u043b\u0438 \u0432 \"\u0432\u0430\u043d\u043d\u0443\"')\nprint('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0441\u0442\u0432\u0438\u0435 \u0431\u0443\u043a\u0432\u0430\u043c\u0438, \u043d\u0430\u0445\u043e\u0434\u044f\u0449\u0435\u0435\u0441\u044f \u0432 \u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0432\u044b\u0447\u0435\u043a, \u0431\u0435\u0437 \u043d\u0438\u0445')\na = input()\nif a == '\u043d\u0430 \u0443\u043b\u0438\u0446\u0443':\n    print('\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0442\u0435\u0441\u044c \u043d\u0430 \u0443\u043b\u0438\u0446\u0435. \u0414\u043e \u0432\u0430\u0441 \u043d\u0430\u0447\u0430\u043b \u0431\u0435\u0436\u0430\u0442\u044c \u0433\u043e\u043f\u043d\u0438\u043a')\n    print('\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \"\u0431\u0435\u0436\u0430\u0442\u044c\" \u0438\u043b\u0438 \"\u0441\u0434\u0430\u0442\u044c\u0441\u044f\"')\n    b = input()\n    if b == '\u0431\u0435\u0436\u0430\u0442\u044c':\n        print('\u0412\u044b \u0431\u0435\u0436\u0438\u0442\u0435... \u0412\u0430\u0441 \u0441\u0431\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0448\u0438\u043d\u0430')\n    elif b == '\u0441\u0434\u0430\u0442\u044c\u0441\u044f':\n        print('\u0413\u043e\u043f\u043d\u0438\u043a \u043e\u0442\u0436\u0430\u043b \u0432\u0441\u0435 \u0432\u0435\u0449\u0438 \u0438 \u0438\u0437\u0431\u0438\u043b \u0432\u0430\u0441 \u0434\u043e \u0441\u043c\u0435\u0440\u0442\u0438. \u0412\u044b \u0443\u043c\u0438\u0440\u0430\u0435\u0442\u0435')\n    else:\n        print('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')\nelif b == '\u043a\u0443\u0445\u043d\u044e':\n    print('\u0412\u044b \u043d\u0430 \u043a\u0443\u0445\u043d\u0435. \u0412\u0430\u0448 \u0434\u0440\u0443\u0433 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043a \u0432\u0430\u043c \u0441\u0437\u0430\u0434\u0438 \u0438 \u0442\u043e\u043b\u043a\u0430\u0435\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0435 \u043e\u043a\u043d\u043e')\nelif c == '\u0432\u0430\u043d\u043d\u0443':\n    print('\u0412\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0435 \u0434\u0432\u0435\u0440\u044c. \u041d\u0430 \u0432\u0430\u0441 \u0432\u044b\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0438\u043f\u044f\u0442\u043e\u043a. \u0432\u044b \u0443\u043c\u0435\u0440\u0430\u0435\u0442\u0435 \u043e\u0442 \u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043e\u0436\u043e\u0433\u043e\u0432')\nelse:\n    print('\u043d\u0443 \u0432\u043e\u0442 \u0438 \u043f\u0430\u0447\u0438\u043c\u0443 \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e \u043d\u0435 \u043e\u0442\u0432\u0435\u0442\u0438\u0442\u044c. \u044f \u043e\u0431\u0438\u0432\u0441\u044f. \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u043e\u0431\u0407\u0442\u044b')", "\u042d\u0445\u043e-0": "\nprint(input())", "\u0414\u0437\u0435\u043d": "\nif input() == '':\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u0414\u0430 \u0438\u043b\u0438 \u043d\u0435\u0442?!": "\ns_1 = str(input())\ns_2 = str(input())\nif s_1 == '\u0434\u0430' and s_2 == '\u0434\u0430':\n    print('\u0412\u0415\u0420\u041d\u041e')\nelif s_1 == '\u043d\u0435\u0442' and s_2 == '\u043d\u0435\u0442':\n    print('\u0412\u0415\u0420\u041d\u041e')\nelif s_1 == '\u043d\u0435\u0442' and s_2 == '\u0434\u0430':\n    print('\u0412\u0415\u0420\u041d\u041e')\nelif s_2 == '\u043d\u0435\u0442' and s_1 == '\u0434\u0430':\n    print('\u0412\u0415\u0420\u041d\u041e')\nelse:\n    print('\u041d\u0415\u0412\u0415\u0420\u041d\u041e')", "\u041b\u0438\u0447\u043d\u043e\u0441\u0442\u043d\u044b\u0439 \u0442\u0435\u0441\u0442 2": "\nprint('\u041a\u0430\u043a\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430 \u0437\u0430 \u043e\u043a\u043d\u043e\u043c?')\nan_1 = input()\nif an_1 == '\u043e\u0441\u0435\u043d\u044c':\n    print('\u043a\u0430\u043a \u0443 \u0432\u0430\u0441 \u0434\u0435\u043b\u0430? \"\u043f\u043b\u043e\u0445\u043e\",\"\u0445\u043e\u0440\u043e\u0448\u043e\",\"\u0445\u0430\u0447\u0443 \u0441\u044b\u0440\u043e\u043a\"')\n    an_2 = input()\n    if an_2 == '\u043f\u043b\u043e\u0445\u043e':\n        print('\u0443\u0440\u044b, \u0443 \u0432\u0430\u0441 \u0434\u0435\u043f\u0440\u0435\u0441\u0441\u0438\u044f \u0432 \u043d\u043e\u043b\u044c \u043b\u0435\u0442')\n    elif an_2 == '\u0445\u043e\u0440\u043e\u0448\u043e':\n        print('\u041d\u0435 \u0432\u043e\u043b\u043d\u0443\u0439\u0442\u0435\u0441\u044c, \u044d\u0442\u043e \u043f\u043e\u043f\u0440\u0430\u0432\u0438\u043c\u043e')\n    elif an_2 == '\u0445\u0430\u0447\u0443 \u0441\u044b\u0440\u043e\u043a':\n        print('\u0410 \u044f \u0445\u0430\u0447\u0443 \u043c\u0430\u0438\u043d\u0435\u0437\u0430, \u043d\u043e \u044f \u0434\u0435\u0440\u0436\u0443\u0441\u044c')\n    else:\n        print('\u043e\u0428\u0438\u0411\u043a\u0410. \u0417\u0430\u0412\u0435\u0420\u0448\u0415\u043d\u0418\u0435 \u0420\u0430\u0411\u043e\u0422\u044b')\nelif an_1 == '\u043b\u0435\u0442\u043e':\n    print('\u043a\u0430\u043a \u0443 \u0432\u0430\u0441 \u0441 \u0433\u043e\u043b\u043e\u0432\u043e\u0439? \"\u043f\u043b\u043e\u0445\u043e\",\"\u0445\u043e\u0440\u0448\u043e\",\"\u0413\u042b)\"')\n    an_2 = input()\n    if an_2 == '\u043f\u043b\u043e\u0445\u043e':\n        print('\u041f\u0430\u043d\u0438\u0430\u044e')\n    elif an_2 == '\u0445\u043e\u0440\u043e\u0448\u043e':\n        print('\u043c\u0434\u0430...')\n    elif an_2 == '\u0413\u042b)':\n        print('\u0411\u0435\u0434\u044b \u0441 \u0431\u0430\u0448\u043a\u043e\u0439')\n    else:\n        print('\u043e\u0428\u0438\u0411\u043a\u0410. \u0417\u0430\u0412\u0435\u0420\u0448\u0415\u043d\u0418\u0435 \u0420\u0430\u0411\u043e\u0422\u044b')\nelif an_1 == '\u0432\u0435\u0441\u043d\u0430':\n    print('\u0445\u043e\u0442\u0438\u0442\u0435 \u0441\u044b\u0440\u043e\u043a? \"\u0434\u0430\",\"\u043d\u0435\u0442\",\"\u0441\u044b\u0440\u043a\u0430\u043c \u043d\u0435\u0442\"')\n    an_2 = input()\n    if an_2 == '\u0434\u0430':\n        print('\u043a\u0443\u043f\u0438 \u0441\u044b\u0440\u043e\u043a')\n    elif an_2 == '\u043d\u0435\u0442':\n        print('\u043a\u0443\u043f\u0438 \u0441\u043b\u043e\u043d\u0430')\n    elif an_2 == '\u0441\u044b\u0440\u043a\u0430\u043c \u043d\u0435\u0442':\n        print('\u043d\u0430 \u0441\u044b\u0440\u043a\u0438 \u0433\u043e\u043d\u0438\u0448\u044c?????!!!??!?')\n    else:\n        print('\u043e\u0428\u0438\u0411\u043a\u0410. \u0417\u0430\u0412\u0435\u0420\u0448\u0415\u043d\u0418\u0435 \u0420\u0430\u0411\u043e\u0422\u044b')\nelif an_1 == '\u0437\u0438\u043c\u0430':\n    print('\u0411\u0430\u0445\u043d\u0443\u0432 \u043f\u0435\u043b\u044c\u043c\u0435\u043d\u0438\u0432? \"\u0434\u0430\",\"\u043d\u0435\u0442\",\"\u043f\u0435\u043b\u044c\u043c\u0435\u043d\u044f\u043c \u043d\u0435\u0442\"')\n    an_2 = input()\n    if an_2 == '\u0434\u0430':\n        print('\u043d\u0430\u0435\u043b\u0441\u044f \u0438 \u0441\u043f\u0438\u0442')\n    elif an_2 == '\u043d\u0435\u0442':\n        print('\u0442\u0435\u043f\u0435\u0440\u044c \u044f \u0445\u0430\u0447\u0443 \u043a\u0438\u043d\u0434\u0435\u0440 \u043f\u0438\u043d\u0433\u0432\u0438')\n    elif an_2 == '\u043f\u0435\u043b\u044c\u043c\u0435\u043d\u044f\u043c \u043d\u0435\u0442':\n        print('\u043f\u0430\u043d\u0438\u043c\u0430\u044e...')\n    else:\n        print('\u043e\u0428\u0438\u0411\u043a\u0410. \u0417\u0430\u0412\u0435\u0420\u0448\u0415\u043d\u0418\u0435 \u0420\u0430\u0411\u043e\u0422\u044b')\nelse:\n    print('\u043e\u0428\u0438\u0411\u043a\u0410. \u0417\u0430\u0412\u0435\u0420\u0448\u0415\u043d\u0418\u0435 \u0420\u0430\u0411\u043e\u0422\u044b')", "\u041a\u043e\u0440\u043e\u0442\u043a\u0430\u044f \u0441\u0432\u0435\u0442\u0441\u043a\u0430\u044f \u0431\u0435\u0441\u0435\u0434\u0430": "\nprint('\u041a\u0430\u043a \u0443 \u0432\u0430\u0441 \u0434\u0435\u043b\u0430, \u041a\u0438\u0440\u0438\u043b\u043b \u0412\u0438\u043a\u0442\u043e\u0440\u043e\u0432\u0438\u0447?')\na = input()\nif '\u043d\u0435' in a or '?' in a:\n    print('\u041f\u0440\u043e\u0441\u0442\u0438\u0442\u0435, \u044f - \u0442\u0443\u043f\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0435 \u043c\u043e\u0433\u0443 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0442\u044c \u0432\u0430\u0448\u0443 \u0437\u0430\u043f\u0438\u0441\u044c. \u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u043d\u0430\u0434 \u044d\u0442\u0438\u043c')\nelif '\u043f\u0440\u0435\u043a\u0440' in a or '\u0437\u0430\u043c\u0435\u0447\u0430' in a or '\u0445\u043e\u0440\u043e\u0448' in a:\n    print('\u041e\u0442\u043b\u0438\u0447\u043d\u043e, \u0443 \u043c\u0435\u043d\u044f \u0442\u043e\u0436\u0435 \u0432\u0441\u0451 \u0445\u043e\u0440\u043e\u0448\u043e :)')\nelif '\u043f\u043b\u043e\u0445' in a or '\u0443\u0436\u0430\u0441' in a:\n    print('\u041d\u0438\u0447\u0435\u0433\u043e, \u0441\u043a\u043e\u0440\u043e \u0432\u0441\u0451 \u0441\u0442\u0430\u043d\u0435\u0442 \u0435\u0449\u0451 \u0445\u0443\u0436\u0435')\nelse:\n    print('\u041f\u0440\u043e\u0441\u0442\u0438\u0442\u0435, \u044f - \u0442\u0443\u043f\u0430\u044f \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0430, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u043d\u0435 \u043c\u043e\u0433\u0443 \u0440\u0430\u0441\u043f\u043e\u0437\u043d\u0430\u0442\u044c \u0432\u0430\u0448\u0443 \u0437\u0430\u043f\u0438\u0441\u044c.')", "\u041a\u0430\u043d\u0438\u043a\u0443\u043b\u044b \u043a\u0430\u043f\u0440\u0438\u0437\u043d\u043e\u0433\u043e \u0440\u0435\u0431\u0451\u043d\u043a\u0430": "\nt1 = input()\nt2 = input()\nif t1 == '\u0422\u0443\u043b\u0430':\n    if t2 == '\u041f\u0435\u043d\u0437\u0430' or t2 == '\u0422\u0443\u043b\u0430':\n        print('\u041d\u0415\u0422')\n    else:\n        print('\u0414\u0410')\nelif t2 == '\u041f\u0435\u043d\u0437\u0430' and t1 != '\u041f\u0435\u043d\u0437\u0430':\n    print('\u0414\u0410')\nelif t2 == '\u041f\u0435\u043d\u0437\u0430' and t1 == '\u041f\u0435\u043d\u0437\u0430':\n    print('\u041d\u0415\u0422')\nelse:\n    print('\u041d\u0415\u0422')", "\u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b: \u043f\u0435\u0440\u0432\u043e\u0435 \u0437\u043d\u0430\u043a\u043e\u043c\u0441\u0442\u0432\u043e": "\nprint(2 * 3 * 4 * 5 * 6 * 7 * 8 * 9)", "\u041f\u043e\u043b\u0442\u043e\u0440\u0430 \u0437\u0435\u043c\u043b\u0435\u043a\u043e\u043f\u0430": "\nprint(1400 // 6 + 1)", "\u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0438\u043d\u0443\u0442 \u0432 \u0433\u043e\u0434\u0443": "\ndays_per_year = 365\nhours_per_day = 24\nminutes_per_hour = 60\nprint(days_per_year * hours_per_day * minutes_per_hour)", "\u0421\u043b\u043e\u0436\u0438\u0442\u044c \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430": "\nprint(int(input()) + int(input()))", "\u0421\u043b\u043e\u0436\u0438\u0442\u044c \u0435\u0449\u0451 \u0434\u0432\u0430 \u0447\u0438\u0441\u043b\u0430": "\nprint(float(input()) + float(input()))", "\u041e\u0434\u043d\u043e \u0447\u0438\u0441\u043b\u043e": "\nn = float(input())\nif n < 1 / 1000000 and n >= -1:\n    print(1000000)\nelse:\n    print(1 / n)", "\u0414\u043b\u0438\u043d\u0430": "\nstring = str(input())\nprint('\u0421\u043b\u043e\u0432\u043e ' + string + ' \u0438\u043c\u0435\u0435\u0442 \u0434\u043b\u0438\u043d\u0443 ' + str(len(string)))", "\u041d\u0430 \u0440\u0430\u0437-\u0434\u0432\u0430-\u0442\u0440\u0438, \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0439\u0441\u044c!": "\n              h1 = int(input())\nh2 = int(input())\nh3 = int(input())\nprint(max(h1, h2, h3))\nprint(h1 + h2 + h3 - max(h1, h2, h3) - min(h1, h2, h3))\nprint(min(h1, h2, h3))", "\u041f\u043b\u044e\u0441-\u043c\u0438\u043d\u0443\u0441": "\nn = float(input())\nif n < 0:\n    print('-')\nelif n == 0:\n    print('0')\nelse:\n    print('+')", "\u0412\u0438\u0441\u043e\u043a\u043e\u0441\u043d\u043e\u0441\u0442\u044c": "\nyear = int(input())\nif year % 400 == 0:\n    print('\u0412\u0438\u0441\u043e\u043a\u043e\u0441\u043d\u044b\u0439')\nelif year % 4 == 0 and year % 100 != 0:\n    print('\u0412\u0438\u0441\u043e\u043a\u043e\u0441\u043d\u044b\u0439')\nelse:\n    print('\u041d\u0435 \u0432\u0438\u0441\u043e\u043a\u043e\u0441\u043d\u044b\u0439')", "\u041a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440": "\nn1 = float(input())\nn2 = float(input())\nzn = str(input())\nif zn == '/' and n2 != 0:\n    print(n1 / n2)\nelif zn == '*':\n    print(n1 * n2)\nelif zn == '+':\n    print(n1 + n2)\nelif zn == '-':\n    print(n1 - n2)\nelse:\n    print(888888)", "\u0423\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435": "\na = 999999\nb = 142857\nx = a - b\nprint(x)", "\u041f\u043e\u043f\u043e\u043b\u0430\u043c": "\nif int(input()) % 2 == 0:\n    print('\u0447\u0451\u0442\u043d\u043e\u0435')\nelse:\n    print('\u043d\u0435\u0447\u0451\u0442\u043d\u043e\u0435')", "\u0412\u0435\u0440\u0441\u0442\u0430\u0435\u043c \u0432\u0438\u0437\u0438\u0442\u043d\u0443\u044e \u043a\u0430\u0440\u0442\u043e\u0447\u043a\u0443": "\nprint(len(input()) * 2 + 3)", "\u0421\u043e\u0431\u0435\u0440\u0438 \u0447\u0438\u0441\u043b\u043e": "\nn = int(input())\n\nprint(str(max(n // 100 + n // 10 % 10, n // 10 % 10 + n % 10)) + \nstr(min(n // 100 + n // 10 % 10, n // 10 % 10 + n % 10)))", "\u041a\u0440\u0430\u0441\u0438\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e": "\n              a = int(input())\nb = a // 100\nc = a // 10 - b * 10\nd = a % 10\ne = max(b, c, d)\nf = min(b, c, d)\ns = b + d + c - f - e\nq = (e + f) / 2\nif q == s:\n    print('\u0412\u044b \u0432\u0432\u0435\u043b\u0438 \u043a\u0440\u0430\u0441\u0438\u0432\u043e\u0435 \u0447\u0438\u0441\u043b\u043e')\nelse:\n    print('\u0416\u0430\u043b\u044c, \u0432\u044b \u0432\u0432\u0435\u043b\u0438 \u043e\u0431\u044b\u0447\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e')", "\u0427\u0435\u0442\u044b\u0440\u0435\u0445\u0437\u043d\u0430\u0447\u043d\u044b\u0439 \u043c\u0438\u043d\u0438\u043c\u0443\u043c": "\nn = int(input())\nn1 = n // 1000\nn2 = n // 100 % 10\nn3 = n // 10 % 10\nn4 = n % 10\nk1 = n1\nk2 = n2\nk3 = n3\nk4 = n4\nif n1 == 0:\n    n1 = 1000\nif n2 == 0:\n    n2 = 1000\nif n3 == 0:\n    n3 = 1000\nif n4 == 0:\n    n4 = 1000\na1 = min(n1, n2, n3, n4)\nn1 = k1\nn2 = k2\nn3 = k3\nn4 = k4\na4 = max(n1, n2, n3, n4)\n\nif n % 1000 == 0:\n    print(n)\nelif a1 == n1:\n    a2 = min(n2, n3, n4)\n    if a2 == n2:\n        a3 = min(n3, n4)\n    elif a2 == n3:\n        a3 = min(n2, n4)\n    else:\n        a3 = min(n2, n3)\n    print(str(a1) + str(a2) + str(a3) + str(a4))\n\nelif a1 == n2:\n    a2 = min(n1, n3, n4)\n    if a2 == n1:\n        a3 = min(n3, n4)\n    elif a2 == n3:\n        a3 = min(n1, n4)\n    else:\n        a3 = min(n1, n3)\n    print(str(a1) + str(a2) + str(a3) + str(a4))\n\nelif a1 == n3:\n    a2 = min(n1, n2, n4)\n    if a2 == n1:\n        a3 = min(n2, n4)\n    elif a2 == n2:\n        a3 = min(n1, n4)\n    else:\n        a3 = min(n1, n2)\n    print(str(a1) + str(a2) + str(a3) + str(a4))\n\nelse:\n    a2 = min(n1, n2, n3)\n    if a2 == n1:\n        a3 = min(n2, n3)\n    elif a2 == n2:\n        a3 = min(n1, n3)\n    else:\n        a3 = min(n2, n1)\n    print(str(a1) + str(a2) + str(a3) + str(a4))", "\u0412\u0441\u043f\u043e\u043c\u043d\u0438\u0442\u044c \u0432\u0441\u0451: if": "\ntemp = float(input())\nif (temp >= 15.5) and (temp <= 28):\n    print('\u041d\u041e\u0420\u041c\u0410\u041b\u042c\u041d\u041e')\nelif temp < 15.5:\n    print('\u0425\u041e\u041b\u041e\u0414\u041d\u041e')\nelse:\n    print('\u0416\u0410\u0420\u041a\u041e')", "password123": "\nlog1 = str(input())\nlog2 = str(input())\nif len(log1) < 8:\n    print('\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439!')\nelif log1 != log2:\n    print('\u0420\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f.')\nelse:\n    print('OK')", "\u0427\u0438\u0441\u043b\u0430 \u0434\u043e \u043d\u0443\u043b\u044f": "\nk = int(input())\nwhile k != 0:\n    print(k)\n    k = int(input())", "\u0421\u0442\u0440\u043e\u043a\u0438 \u0434\u043e \u043f\u0443\u0441\u0442\u043e\u0439": "\nk = str(input())\nwhile k != '':\n    print(k)\n    k = str(input())", "\u0423\u0447\u0438\u0442\u0435\u043b\u044c": "\nnum = int(input())\nwhile num >= 8:\n    num //= 8\nprint(num)", "\u0421\u043a\u0438\u0434\u043a\u0438": "\nn = float(input())\ncum = 0\nwhile n >= 0:\n    if n > 1000:\n        n = n / 100 * 95\n    else:\n        n = n\n    cum += n\n    n = float(input())\nprint(cum)", "\u0422\u0430\u043a\u0438\u0445 \u0431\u0435\u0440\u0443\u0442 \u0432 \u043a\u043e\u0441\u043c\u043e\u043d\u0430\u0432\u0442\u044b": "\ncum = 0\nminn = 100000000000\nmaxx = 0\nnum = input()\nwhile num != '!':\n    num = int(num)\n    if num >= 150 and num <= 190:\n        if num < minn:\n            minn = num\n        if num > maxx:\n            maxx = num\n        cum += 1\n    num = input()\n\nprint(cum)\nprint(minn, maxx)", "\u0421\u043a\u043e\u043b\u044c\u043a\u043e \u0441\u0442\u0440\u043e\u043a?": "\ncum = 0\nass = str(input())\nwhile ass != '\u0421\u043f\u0430\u0441\u0438\u0431\u043e.':\n    cum += 1\n    ass = str(input())\nprint(cum + 1)", "\u0421\u0440\u0435\u0434\u043d\u0435\u0435": "\ncum = 0\nsumm = 0\nass = float(input())\nwhile ass >= -300:\n    cum += 1\n    summ += ass\n    ass = float(input())\nprint(summ / cum)", "1024 \u0438 \u0432\u0441\u0435-\u0432\u0441\u0435-\u0432\u0441\u0435": "\na = float(input())\nb = 0\nwhile a > 1:\n    a = a / 2\n    b = b + 1\nif a == 1:\n    print(b)\nelse:\n    print('\u041d\u0415\u0422')\n    ", "password123456": "\nlog1 = str(input())\nlog2 = str(input())\nif len(log1) < 8:\n    print('\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439!')\nelif '123' in log1:\n    print('\u041f\u0440\u043e\u0441\u0442\u043e\u0439!')\nelif log1 != log2:\n    print('\u0420\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f.')\nelse:\n    print('OK')", "\u041a\u0440\u0443\u0433\u043b\u044b\u0435": "\nn = int(input())\nwhile n % 10 == 0 or n == 0:\n    print(n)\n    n = int(input())", "password": "\nkritery = '\u0413\u043e\u0443\u043d\u0407'\nwhile kritery != 'OK':\n    log1 = str(input())\n    log2 = str(input())\n    if len(log1) < 8:\n        print('\u041a\u043e\u0440\u043e\u0442\u043a\u0438\u0439!')\n    elif '123' in log1:\n        print('\u041f\u0440\u043e\u0441\u0442\u043e\u0439!')\n    elif log1 != log2:\n        print('\u0420\u0430\u0437\u043b\u0438\u0447\u0430\u044e\u0442\u0441\u044f.')\n    else:\n        kritery = 'OK'\n        print('OK')", "\u041b\u0430\u0431\u0438\u0440\u0438\u043d\u0442 \u0441 \u043f\u0440\u0430\u0432\u043e\u043c \u043d\u0430 \u043e\u0448\u0438\u0431\u043a\u0443": "\nprint('\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u0432 \u043a\u043e\u043c\u043d\u0430\u0442\u0435.\u041c\u043e\u0436\u043d\u043e \u043f\u043e\u0439\u0442\u0438 \"\u043d\u0430 \u0443\u043b\u0438\u0446\u0443\", \u0432 \"\u043a\u0443\u0445\u043d\u044e\" \u0438\u043b\u0438 \u0432 \"\u0432\u0430\u043d\u043d\u0443\"')\nprint('\u0412\u0432\u0435\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0441\u0442\u0432\u0438\u0435 \u0431\u0443\u043a\u0432\u0430\u043c\u0438, \u043d\u0430\u0445\u043e\u0434\u044f\u0449\u0435\u0435\u0441\u044f \u0432 \u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0432\u044b\u0447\u0435\u043a, \u0431\u0435\u0437 \u043d\u0438\u0445')\na = input()\nwhile a != '\u043d\u0430 \u0443\u043b\u0438\u0446\u0443' or a != '\u043a\u0443\u0445\u043d\u044e' or a != '\u0432\u0430\u043d\u043d\u0443':\n    print('\u0432\u0432\u0435\u0434\u0438\u0442\u0435, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e')\n    a = str(input())\nif a == '\u043d\u0430 \u0443\u043b\u0438\u0446\u0443':\n    print('\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0442\u0435\u0441\u044c \u043d\u0430 \u0443\u043b\u0438\u0446\u0435. \u0414\u043e \u0432\u0430\u0441 \u043d\u0430\u0447\u0430\u043b \u0431\u0435\u0436\u0430\u0442\u044c \u0433\u043e\u043f\u043d\u0438\u043a')\n    print('\u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \"\u0431\u0435\u0436\u0430\u0442\u044c\" \u0438\u043b\u0438 \"\u0441\u0434\u0430\u0442\u044c\u0441\u044f\"')\n    b = input()\n    while b != '\u0431\u0435\u0436\u0430\u0442\u044c' or b != '\u0441\u0434\u0430\u0442\u044c\u0441\u044f':\n        print('\u0432\u0432\u0435\u0434\u0438\u0442\u0435, \u043f\u043e\u0436\u0430\u043b\u0443\u0439\u0441\u0442\u0430, \u043d\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e')\n        b = str(input())    \n    if b == '\u0431\u0435\u0436\u0430\u0442\u044c':\n        print('\u0412\u044b \u0431\u0435\u0436\u0438\u0442\u0435... \u0412\u0430\u0441 \u0441\u0431\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0448\u0438\u043d\u0430')\n    elif b == '\u0441\u0434\u0430\u0442\u044c\u0441\u044f':\n        print('\u0413\u043e\u043f\u043d\u0438\u043a \u043e\u0442\u0436\u0430\u043b \u0432\u0441\u0435 \u0432\u0435\u0449\u0438 \u0438 \u0438\u0437\u0431\u0438\u043b \u0432\u0430\u0441 \u0434\u043e \u0441\u043c\u0435\u0440\u0442\u0438. \u0412\u044b \u0443\u043c\u0438\u0440\u0430\u0435\u0442\u0435')\n    else:\n        print('\u041e\u0448\u0438\u0431\u043a\u0430. \u043c\u0430\u043b\u0430\u0434\u0435\u0442\u0441..... \u0417\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b')\nelif a == '\u043a\u0443\u0445\u043d\u044e':\n    print('\u0412\u044b \u043d\u0430 \u043a\u0443\u0445\u043d\u0435. \u0412\u0430\u0448 \u0434\u0440\u0443\u0433 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u043a \u0432\u0430\u043c \u0441\u0437\u0430\u0434\u0438 \u0438 \u0442\u043e\u043b\u043a\u0430\u0435\u0442 \u0432 \u043e\u0442\u043a\u0440\u044b\u0442\u043e\u0435 \u043e\u043a\u043d\u043e')\nelif a == '\u0432\u0430\u043d\u043d\u0443':\n    print('\u0412\u044b \u043e\u0442\u043a\u0440\u044b\u0432\u0430\u0435\u0442\u0435 \u0434\u0432\u0435\u0440\u044c. \u041d\u0430 \u0432\u0430\u0441 \u0432\u044b\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u043a\u0438\u043f\u044f\u0442\u043e\u043a. \u0432\u044b \u0443\u043c\u0435\u0440\u0430\u0435\u0442\u0435 \u043e\u0442 \u043c\u043d\u043e\u0433\u043e\u0447\u0438\u0441\u043b\u0435\u043d\u043d\u044b\u0445 \u043e\u0436\u043e\u0433\u043e\u0432')", "\u0421\u0438\u0440\u0430\u043a\u0443\u0437\u0441\u043a\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c": "\na = int(input())\ns = 0\nwhile a != 1:\n    if a % 2 == 0:\n        a = a / 2\n        s = s + 1\n    else:\n        a = 3 * a + 1\n        s = s + 1\nprint(s)", "\u0411\u0438\u043d\u0430\u0440\u043d\u0430\u044f \u0443\u0433\u0430\u0434\u0430\u0439\u043a\u0430 v2.0": "\nni = 0\nna = 1001\ny = ''\nfag = 0\nx = x1 = 0\nwhile fag != 1:\n    x = (na + ni) // 2\n    print(x)\n    y = str(input())\n    if y == '<':\n        na = x\n    elif y == '>':\n        ni = x\n    elif y == '=':\n        fag = 1", "\u0418\u0449\u0435\u043c \u043a\u043b\u0430\u0434 \u2014 1": "\nk = 0\nx = 0\ny = 0\nn = 0\ng = ''\na = int(input())\nb = int(input())\nwhile x != a or y != b:\n    g = input()\n    if g == '\u0432\u043f\u0435\u0440\u0451\u0434':\n        if n == 0:\n            y += int(input())\n        elif n == 1:\n            x += int(input())\n        elif n == 2:\n            y -= int(input())\n        elif n == 3:\n            x -= int(input())\n    elif g == '\u043d\u0430\u043f\u0440\u0430\u0432\u043e':\n        n += 1\n    elif g == '\u043d\u0430\u043b\u0435\u0432\u043e':\n        n -= 1\n    elif g == '\u0440\u0430\u0437\u0432\u043e\u0440\u043e\u0442':\n        n -= 2\n    k += 1\n    n %= 4\nprint(k)\nif n == 0:\n    print('\u0441\u0435\u0432\u0435\u0440')\nelif n == 1:\n    print('\u0432\u043e\u0441\u0442\u043e\u043a')\nelif n == 2:\n    print('\u044e\u0433')\nelif n == 3:\n    print('\u0437\u0430\u043f\u0430\u0434')", "\u0411\u0430\u043d\u043a": "\nprint('\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u0432 \u0438\u043d\u0442\u0435\u0440\u043d\u0435\u0442-\u0431\u0430\u043d\u043a!')\nprint('\u0423 \u043d\u0430\u0441 \u0444\u0430\u043d\u0442\u0430\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u043e\u0446\u0435\u043d\u0442\u043d\u044b\u0435 \u0441\u0442\u0430\u0432\u043a\u0438!')\nprint('\u0414\u043b\u044f \u0432\u043a\u043b\u0430\u0434\u043e\u0432 \u0434\u043e 10 \u0442\u044b\u0441\u044f\u0447 \u20bd \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043f\u0440\u0438\u0431\u044b\u043b\u044c \u0441\u043e\u0441\u0442\u0430\u0432\u0438\u0442 10%,')\nprint('\u0434\u043b\u044f \u0432\u043a\u043b\u0430\u0434\u043e\u0432 \u043d\u0430 \u0441\u0443\u043c\u043c\u0443 \u0434\u043e 100 \u0442\u044b\u0441\u044f\u0447 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e - 20%,')\nprint('\u0434\u043b\u044f \u0431\u043e\u043b\u0435\u0435 100 \u0442\u044b\u0441\u044f\u0447 - 30%!')\nprint('\u041d\u0430 \u043a\u0430\u043a\u0443\u044e \u0441\u0443\u043c\u043c\u0443 \u0436\u0435\u043b\u0430\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0432\u043a\u043b\u0430\u0434?')\nm = float(input())\nif m <= 10000:\n    m *= 1.1\nelif m <= 100000:\n    m *= 1.2\nelif m > 100000:\n    m *= 1.3\nprint('\u0412\u044b \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442\u0435', m, '\u20bd, \u043f\u043e\u0437\u0434\u0440\u0430\u0432\u043b\u044f\u0435\u043c!')", "\u0424\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438": "\na = int(input())\nv = 1\nva = 1\nprint(va)\ns = v + va\nwhile va <= a:\n    print(va)\n    s = v + va\n    v = va\n    va = s", "\u041d\u0438\u043c-\u043f\u0430\u0441\u044c\u044f\u043d\u0441": "\nn = int(input())\nwhile n != 0:\n    n -= int(input())\n    print(n)", "\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c-\u043f\u0430\u0441\u044c\u044f\u043d\u0441": "\nn = int(input())\nwhile n != 0:\n    cum = int(input())\n    if cum <= 3 and cum >= 1 and cum <= n:\n        n -= cum\n    print(n)", "\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c v2.0": "\nc = 0\ns = int(input())\nwhile s != 0:\n    if c % 2 == 0:\n        if s % 4 == 0:\n            a1 = 2\n            s -= a1\n            c += 1\n            print(a1, s)\n        else:\n            if s % 4 == 1:\n                a1 = 1\n                s -= a1\n                c += 1\n                print(a1, s)\n            elif s % 4 == 2:\n                a1 = 2\n                s -= a1\n                c += 1\n                print(a1, s)\n            elif s % 4 == 3:\n                a1 = 3\n                s -= a1\n                c += 1\n                print(a1, s)\n    else:\n        a2 = int(input())\n        while 1 > a2 or a2 > 3:\n            print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0445\u043e\u0434:', a2)\n            a2 = int(input())\n        s -= a2\n        c += 1\n        print(a2, s)\nif c % 2 == 0 and s == 0:\n    print('\u0412\u044b \u0432\u044b\u0438\u0433\u0440\u0430\u043b\u0438!')\nelse:\n    print('\u0418\u0418 \u0432\u044b\u0438\u0433\u0440\u0430\u043b!')", "\u041e\u0441\u0442\u0440\u043e\u0432 \u043d\u0435\u0432\u0435\u0437\u0435\u043d\u0438\u044f": "\nd = int(input())\nm = int(input())\ncy = int(input())\nif m == 3:\n    m = 1\nelif m == 4:\n    m = 2\nelif m == 5:\n    m = 3\nelif m == 6:\n    m = 4\nelif m == 7:\n    m = 5\nelif m == 8:\n    m = 6\nelif m == 9:\n    m = 7\nelif m == 10:\n    m = 8\nelif m == 11:\n    m = 9\nelif m == 12:\n    m = 10\nelif m == 1:\n    m = 11\n    cy -= 1\nelif m == 2:\n    m = 12\n    cy -= 1\n\nc = cy // 100\ny = cy % 100\nprint((d + ((13 * m - 1) // 5) + y + (y // 4 + c // 4 - 2 * c + 777)) % 7)", "\u0426\u0438\u0440\u043a, \u0446\u0438\u0440\u043a, \u0446\u0438\u0440\u043a!": "\na = int(input())\nq = 0\nwhile a != 1:\n    if a % 2 == 0:\n        a /= 2\n    else:\n        a -= 1\n    q += 1\nprint(q)", "\u041f\u0441\u0435\u0432\u0434\u043e\u043d\u0438\u043c-\u043c\u0438\u0437\u0435\u0440": "\nc = 0\ns = int(input())\nwhile s > 0:\n    if c % 2 == 0:\n        if s % 4 == 0:\n            a1 = 2\n            s -= a1\n            c += 1\n            print(a1, s)\n        elif s % 4 == 1:\n            a1 = 1\n            s -= a1\n            c += 1\n            print(a1, s)\n        elif s % 4 == 2:\n            a1 = 2\n            s -= a1\n            c += 1\n            print(a1, s)\n        elif s % 4 == 3:\n            a1 = 3\n            s -= a1\n            c += 1\n            print(a1, s)\n    else:\n        a2 = int(input())\n        while 1 > a2 or a2 > 3:\n            print('\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0445\u043e\u0434:', a2)\n            a2 = int(input())\n        s -= a2\n        c += 1\n        print(a2, s)\nif c % 2 == 0 and s == 0:\n    print('\u0412\u044b \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0438! \u0412\u044b - \u0431\u043e\u0442')\nelse:\n    print('\u0412\u044b \u0432\u044b\u0438\u0433\u0440\u0430\u043b\u0438!')", "\u041b\u0430\u0431\u0438\u0440\u0438\u043d\u0442 2": "\nprint('\u0412\u0432\u043e\u0434\u0438\u0442\u0435 \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0432\u043d\u0443\u0442\u0440\u0438 \u043a\u0430\u0432\u044b\u0447\u0435\u043a')\nprint('\u0438 \u0434\u0430, \u0443 \u043c\u0435\u043d\u044f \u043d\u0435\u0442 \u0438\u0434\u0435\u0439, \u043f\u043e\u044d\u0442\u043e\u043c\u0443 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0447\u0442\u043e-\u0442\u043e \u0441\u0442\u0440\u0430\u043d\u043d\u043e\u0435')\nkp = 1 \ni = 0\nwhile i != 1:\n    if kp == 1:\n        print('\u0412\u044b \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0435\u0441\u044c \u043d\u0430 \u0443\u043b\u0438\u0446\u0435. \u0412\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u043f\u043e\u0439\u0442\u0438 \"\u043d\u0430\u043f\u0440\u0430\u0432\u043e\" \u0438\u043b\u0438 \"\u043f\u0440\u044f\u043c\u043e\"')\n        a1 = str(input())\n        if '\u043d\u0430\u043f\u0440\u0430\u0432\u043e' in a1:\n            kp = 2 \n        if '\u043f\u0440\u044f\u043c\u043e' in a1:\n            kp = 3\n    if kp == 2:\n        print('\u0432\u044b \u0438\u0434\u0451\u0442\u0435 \u043f\u043e \u0443\u043b\u0438\u0446\u0435. \u0412 \u0434\u0430\u043b\u0438 \u0432\u0435\u0434\u043d\u0435\u0435\u0442\u0441\u044f \u0433\u043e\u043f\u043d\u0438\u043a.')\n        print('\u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435: \u043f\u0440\u043e\u0434\u043e\u043b\u0436\u0438\u0442\u044c \"\u0438\u0434\u0442\u0438\", \"\u0443\u0431\u0435\u0433\u0430\u0442\u044c\" \u0438\u043b\u0438  \u0432\u0435\u0440\u043d\u0443\u0442\u044c\u0441\u044f \"\u043d\u0430\u0437\u0430\u0434\"')\n        a2 = str(input())\n        if '\u0438\u0434\u0442\u0438' in a2:\n            print('\u0412\u044b \u043e\u0441\u0442\u0430\u0451\u0442\u0435\u0441\u044c \u043e\u0434\u043d\u0438 \u043d\u0430 \u0443\u043b\u0438\u0446\u0435 \u043b\u0438\u0446\u043e\u043c \u043a \u043b\u0438\u0446\u0443.....')\n            print('\u0412\u044b \u043b\u0435\u0436\u0438\u0442\u0435 \u043d\u0430 \u0437\u0435\u043c\u043b\u0435 \u0441\u043a\u043e\u0440\u0447\u0438\u0432\u0448\u0438\u0441\u044c \u043e\u0442 \u0431\u043e\u043b\u0438, \u043d\u043e \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0441\u0434\u0435\u043b\u0430\u0442\u044c')\n            print('game over')\n            i = 1\n        if '\u0443\u0431\u0435\u0433\u0430\u0442\u044c' in a2:\n            print('\u0412\u044b \u0431\u0435\u0436\u0438\u0442\u0435. \u0421\u043f\u043e\u0442\u043a\u043d\u0443\u0432\u0448\u0438\u0441\u044c \u043d\u0430 \u0440\u043e\u0432\u043d\u043e\u043c \u043c\u0435\u0441\u0442\u0435, \u0432\u044b \u043f\u0430\u0434\u0430\u0435\u0442\u0435')\n            print('\u0423\u043f\u0430\u0432, \u0432\u044b \u0440\u0430\u0437\u0431\u0438\u043b\u0438 \u0441\u0435\u0431\u0435 \u0447\u0435\u0440\u0435\u043f... \u0415\u0433\u043e \u043e\u0441\u043a\u043b\u043a\u0438 \u043f\u043e\u043f\u0430\u043b\u0438 \u0432\u0430\u043c \u0432 \u043c\u043e\u0437\u0433')\n            print('\u0418\u0437-\u0437\u0430 \u044d\u0442\u043e\u0433\u043e \u0443 \u0432\u0430\u0441 \u043d\u0430\u0440\u0443\u0448\u0438\u043b\u0438\u0441\u044c \u0434\u0432\u0438\u0433\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438')\n            print('game over')\n            i = 1\n        if '\u043d\u0430\u0437\u0430\u0434' in a2:\n            print('ok')\n            kp = 1\n    if kp == 3:\n        print('\u0432\u044b \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442\u0435 \u043a \u043f\u0435\u0440\u0435\u043a\u0440\u0451\u0441\u0442\u043a\u0443')\n        print('\u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435: \"\u043f\u0435\u0440\u0435\u0431\u0435\u0436\u0430\u0442\u044c\" \u0434\u043e\u0440\u043e\u0433\u0443, \"\u0434\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f\" \u043f\u043e\u043a\u0430 \u043d\u0430 \u0441\u0432\u0435\u0442\u043e\u0444\u043e\u0440\u0435 \u0437\u0430\u0433\u043e\u0440\u0438\u0442\u044c\u0441\u044f \u0437\u0435\u043b\u0451\u043d\u044b\u0439')\n        print('\u0438\u043b\u0438 \u043f\u043e\u0439\u0442\u0438 \"\u043d\u0430\u0437\u0430\u0434\"')\n        a3 = str(input())\n        if '\u043d\u0430\u0437\u0430\u0434' in a3:\n            print('ok')\n            kp = 1\n        if '\u043f\u0435\u0440\u0435\u0431\u0435\u0436\u0430\u0442\u044c' in a3:\n            print('\u0412\u044b \u0432\u044b\u0431\u0435\u0433\u0430\u0435\u0442\u0435 \u043d\u0430 \u043f\u0440\u043e\u0435\u0437\u0436\u0443\u044e \u0447\u0430\u0441\u0442\u044c. \u0412\u0430\u0441 \u0441\u0431\u0438\u0432\u0430\u0435\u0442 \u043c\u0430\u0448\u0438\u043d\u0430.')\n            print('game over')\n            i = 1\n        if '\u0434\u043e\u0436\u0434\u0430\u0442\u044c\u0441\u044f' in a3:\n            print('\u0432\u044b \u0436\u0434\u0451\u0442\u0435. \u0432\u0434\u0440\u0443\u0433, \u043e\u0434\u043d\u0430 \u0438\u0437 \u0435\u0445\u0430\u0432\u0448\u0438\u0445 \u043f\u043e \u0434\u0440\u043e\u0433\u0435 \u043c\u0430\u0448\u0438\u043d \u0442\u0430\u0440\u0430\u043d\u0438\u0442 \u0442\u043e\u043b\u043f\u0443 \u043d\u0430 \u043f\u0435\u0440\u0435\u0445\u043e\u0434\u0435')\n            print('\u0432 \u044d\u0442\u043e\u0439\u0439 \u0442\u043e\u043b\u043f\u0435 \u0431\u044b\u043b\u0438 \u0432\u044b')\n            print('game over')\n            i = 1", "\u0411\u043e\u0442-\u0433\u043e\u0432\u043e\u0440\u0438\u043b\u043a\u0430": "\na = '\u0430\u0431\u0449\u0445\u0434\u0430'\nprint('\u0417\u0434\u0440\u0430\u0432\u0441\u0432\u0443\u0439\u0442\u0435, \u041a\u0438\u0440\u0438\u043b\u043b \u0412\u0438\u043a\u0442\u043e\u0440\u043e\u0432\u0438\u0447. \u041a\u0430\u043a \u0443 \u0432\u0430\u0441 \u0434\u0435\u043b\u0430?')\na = str(input())\nwhile not('\u043f\u043e\u043a' in a or '\u043f\u0440\u043e\u0449' in a or '\u0434\u043e \u0441\u0432\u0438\u0434\u0430\u043d' in a):\n    if '\u043d\u0435' in a:\n        print('\u0430\u0433\u0430, \u0434\u0430-\u0434\u0430-\u0434\u0430, \u0432\u0441\u0451, \u0447\u0442\u043e \u0432\u044b \u0441\u043a\u0430\u0437\u0430\u043b\u0438 \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u0441\u043b\u043e\u0436\u043d\u043e')\n    if '?' in a:\n        print('\u0434\u0430')\n    elif '\u043f\u0440\u0435\u043a\u0440' in a or '\u0437\u0430\u043c\u0435\u0447\u0430' in a or '\u0445\u043e\u0440\u043e\u0448' in a:\n        print('\u041e\u0442\u043b\u0438\u0447\u043d\u043e, \u0443 \u043c\u0435\u043d\u044f \u0442\u043e\u0436\u0435 \u0432\u0441\u0451 \u0445\u043e\u0440\u043e\u0448\u043e :)')\n    elif '\u043f\u043b\u043e\u0445' in a or '\u0443\u0436\u0430\u0441' in a:\n        print('\u041d\u0438\u0447\u0435\u0433\u043e, \u0441\u043a\u043e\u0440\u043e \u0432\u0441\u0451 \u0441\u0442\u0430\u043d\u0435\u0442 \u0435\u0449\u0451 \u0445\u0443\u0436\u0435))))))))))))')\n    elif '\u0442\u044b \u043e\u0442\u0441' in a or '\u0431\u043e\u0442 \u0433' in a or '\u0442\u044b - \u043e\u043b\u0435\u0433' in a or '\u0431\u043e\u0442 \u043f\u043b\u043e\u0445' in a:\n        print('\u0421 \u0434\u043d\u0451\u043c \u0431\u0443\u043b\u043b\u0438\u043d\u0433\u0430!!!!')\n    else:\n        print('\u043e\u043a, \u0438 \u0447\u0442\u043e \u0434\u0430\u043b\u044c\u0448\u0435?')\n    a = str(input())\nprint('\u0434\u043e \u0441\u0432\u0438\u0434\u0430\u043d\u0438\u044f')", "\u041d\u0438\u043c2-\u043f\u0430\u0441\u044c\u044f\u043d\u0441": "\nn_1 = int(input())\nn_2 = int(input())\nwhile n_1 != 0 or n_2 != 0:\n    cum = int(input())\n    hochu_pivo = int(input())\n    if cum == 1:\n        n_1 -= hochu_pivo\n    elif cum == 2:\n        n_2 -= hochu_pivo\n    print(n_1, n_2)", "\u041d\u0438\u043c3-\u043f\u0430\u0441\u044c\u044f\u043d\u0441": "\nn_1 = int(input())\nn_2 = int(input())\nn_3 = int(input())\nwhile n_1 != 0 or n_2 != 0 or n_3 != 0:\n    kucha = int(input())\n    h = int(input())\n    if kucha == 1:\n        n_1 -= h\n    elif kucha == 2:\n        n_2 -= h\n    elif kucha == 3:\n        n_3 -= h\n    print(n_1, n_2, n_3)", "\u0414\u0435\u043b\u0438\u0442\u0435 \u043b\u0438": "\nk = 0\nn = int(input())\nfor i in range(1, 12):\n    if n % i == 0:\n        k += 1\n        print(i, end=' ')\nif k == 2:\n    print('\u041f\u0420\u041e\u0421\u0422\u041e\u0415')\nelse:\n    print('\u041d\u0415\u0422')", "\u0416\u0434\u0451\u043c \u043f\u043e\u0442\u0435\u043f\u043b\u0435\u043d\u0438\u044f": "\ntemp = float(input())\nk = 0\nwhile temp < 22.0:\n    k += 1\n    temp = float(input())\nprint(k // 7)", "\u041f\u043e\u0432\u0442\u043e\u0440\u0435\u043d\u0438\u0435 - \u043c\u0430\u0442\u044c \u0443\u0447\u0435\u043d\u0438\u044f: ultimate edition": "\nass = str(input())\npivo = int(input())\nfor i in range(pivo):\n    print(ass)", "\u041a\u0443\u0431\u0438\u0437\u043c": "\nn = int(input())\nfor i in range(0, n + 1):\n    print('\u041a\u0443\u0431 \u0447\u0438\u0441\u043b\u0430', i, '\u0440\u0430\u0432\u0435\u043d', i ** 3)", "\u0424\u0430\u043a\u0442\u043e\u0440\u0438\u0430\u043b": "\nn = int(input())\nass = 1\nfor i in range(1, n + 1):\n    ass *= i\nprint(ass)", "\u041f\u0435\u0440\u0435\u043c\u043d\u043e\u0436\u0438\u0442\u044c \u0431\u0435\u0437 \u0442\u0440\u044e\u043a\u043e\u0432": "\nniggers = 1\nfor i in range(6):\n    gg = int(input())\n    if gg != 0:\n        niggers *= gg\nprint(niggers)", "\u0412\u044b\u0448\u0435\u043b \u0437\u0430\u0439\u0447\u0438\u043a \u043f\u043e\u0433\u0443\u043b\u044f\u0442\u044c": "\nn = int(input())\nfor i in range(0, n + 1):\n    print(i, end=' ')", "\u041e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043e\u0442\u0441\u0447\u0451\u0442": "\nn = int(input())\nfor i in range(n, -1, -1):\n    print('\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0441\u0435\u043a\u0443\u043d\u0434:', i)\nprint('\u041f\u0443\u0441\u043a')", "\u041f\u0438\u0440\u0430\u043c\u0438\u0434\u0430": "\nk = 1\ng = int(input())\ng = g - 1\nwhile g > -1:\n    print(' ' * g, end='')\n    print('*' * k)\n    k += 2\n    g -= 1", "\u0422\u0435\u0441\u0442 \u043d\u0430 \u0434\u0435\u043b\u0438\u043c\u043e\u0441\u0442\u044c": "\nfor i in range(0, 17):\n    a = int(input())\n    if i % a == 0:\n        print('\u0414\u0410')\n    else:\n        print('\u041d\u0415\u0422')", "\u0423\u043c\u043d\u0435\u0435 \u0441\u0440\u0435\u0434\u043d\u0435\u0433\u043e": "\nn = int(input())\niq = int(input())\ncum = iq\nprint('0')\nfor i in range(1, n):\n    iq = int(input())\n    if iq > cum / i:\n        print('>')\n        elif iq == cum / i:\n            print('0')\n            else:\n                print('<')\n                cum += iq", "\u0428\u0432\u0430\u0440\u0446\u0435\u043d\u0435\u0433\u0433\u0435\u0440 \u043f\u0440\u043e\u0442\u0438\u0432 \u0413\u043e\u0434\u0437\u0438\u043b\u043b\u044b": "\nchi_n = 0\nzn_n = 1\n\nfor i in range(int(input())):\n    chi_v = int(input())\n    zn_v = int(input())\n    chi_n = chi_n * zn_v + chi_v * zn_n\n    zn_n *= zn_v\nx = chi_n\ny = zn_n\nwhile y > 0:\n    x, y = y, x % y\nprint(str(chi_n // x) + '/' + str(zn_n // x))", "\u0414\u0437\u0435\u0442\u0430-\u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0420\u0438\u043c\u0430\u043d\u0430": "\nn = int(input())\na = 0\np = 3.141592653589793\nfor i in range(1, n + 1):\n    a += 1 / (i ** 2)\nprint((p ** 2) / a)", "\u0421\u0443\u043c\u043c\u0430 \u0440\u044f\u0434\u0430": "\ns = 0\ng = 0\nn = int(input())\nfor i in range(1, n + 1):\n    q = int(input())\n    while i % 2 == 1 and g == 0:\n        s = s + q\n        g = 1\n    g = 0\n    while i % 2 == 0 and g == 0:\n        s = s - q\n        g = 1\n    g = 0\nprint(s)", "\u041a\u043e\u043d\u0444\u0435\u0442\u043d\u043e\u0435 \u0438\u0437\u043e\u0431\u0438\u043b\u0438\u0435": "\nn = int(input())\n\nfor i in range(int(-1 / 2 + (1 / 4 + 2 * n) ** 0.5) + 2, 0, -1):\n    g = (n - (i * (i + 1) // 2)) // (i + 1)\n    if g * (i + 1) == n - (i * (i + 1) // 2) and g > 0:\n        a1 = min(n, g)\n        break\n\nprint(a1)", "FizzBuzz": "\na = int(input())\nb = int(input())\nfor i in range(a, b + 1):\n    if i % 3 == 0 and i % 5 == 0:\n        print('FizzBuzz')\n    elif i % 3 == 0:\n        print('Fizz')\n    elif i % 5 == 0:\n        print('Buzz')\n    else:\n        print(i)", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430": "\nchto_zakiberBOOLili_tebaya_da = False\nfor i in range(int(input())):\n    ass = str(input())\n    if '\u043a\u043e\u0442' in ass or '\u041a\u043e\u0442' in ass:\n        chto_zakiberBOOLili_tebaya_da = True\n\nif chto_zakiberBOOLili_tebaya_da:\n    print('\u041c\u042f\u0423')\nelse:\n    print('\u041d\u0415\u0422')", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 2": "\no = 0\nb = 0\nh = ''\nwhile h != '\u0421\u0422\u041e\u041f':\n    h = str(input())\n    if '\u041a\u043e\u0442' in h or '\u043a\u043e\u0442' in h:\n        b = 1\n    if b != 1:\n        o += 1\nif b == 1:\n    print(o + 1)\nelse:\n    print(-1)", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 (break)": "\ns = False\nn = int(input())\nfor i in range(0, n):\n    k = str(input())\n    if '\u041a\u043e\u0442' in k or '\u043a\u043e\u0442' in k:\n        print('\u041c\u042f\u0423')\n        s = True\n        break\nif s == (not True):\n    print('\u041d\u0415\u0422')", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 2 (break)": "\nb = False\nn = 1\nw = ''\nwhile True:\n    w = str(input())\n    if w == '\u0421\u0422\u041e\u041f':\n        if not(b):\n            print(-1)\n        else:\n            print(n - 1)\n        break\n    if not(b):\n        if '\u041a\u043e\u0442' in w or '\u043a\u043e\u0442' in w:\n            b = True\n            n += 1\n        else:\n            n += 1", "\u0421\u043b\u043e\u0436\u0438\u0442\u044c\u0441\u044f \u0434\u043e 10": "\ng = 0\nsumm = 0\nwhile True:\n    n = int(input())\n    if n == 0:\n        break\n    if summ != 10:\n        summ += n\n        g += 1\nprint(g)", "1984": "\nmir = '\u041e\u0441\u0442\u0430\u0437\u0438\u044f'\nnemir = '\u0415\u0432\u0440\u0430\u0437\u0438\u044f'\nb = ''\na = int(input())\nfor i in range(a):\n    v = str(input())\n    if v == '\u041c\u0435\u043d\u044f\u0435\u043c':\n        b = mir\n        mir = nemir\n        nemir = b\n    if v == '\u0421 \u043a\u0435\u043c \u0432\u043e\u0439\u043d\u0430?':\n        print(nemir)\n    if v == '\u0421 \u043a\u0435\u043c \u043c\u0438\u0440?':\n        print(mir)", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 3": "\nkolvo = 0\nstroka = 0\nkit = False\nwhile True:\n    a = str(input())\n    if a == '\u0421\u0422\u041e\u041f':\n        break\n    if '\u041a\u043e\u0442' in a or '\u043a\u043e\u0442' in a:\n        kit = True\n        kolvo += 1\n    if not(kit):\n        stroka += 1\nif kit:\n    print(kolvo, stroka + 1)\nelse:\n    print(0, -1)", "\u0418\u0449\u0435\u043c \u043a\u043b\u0430\u0434 \u2014 2": "\nklad_x = int(input())\nklad_y = int(input())\nkor_y = 0\nkor_x = 0\nnnn = 0\nj = 0\n\nkladmen_mak = 0\nwhile True:\n    nap = str(input())\n    if nap == '\u0441\u0442\u043e\u043f':\n        print(j)\n        break\n\n    n = int(input())\n    if nap == '\u0441\u0435\u0432\u0435\u0440':\n        kor_y += n\n    elif nap == '\u044e\u0433':\n        kor_y -= n\n    elif nap == '\u0432\u043e\u0441\u0442\u043e\u043a':\n        kor_x += n\n    elif nap == '\u0437\u0430\u043f\u0430\u0434':\n        kor_x -= n\n    nnn += 1\n\n    if klad_x == kor_x and klad_y == kor_y:\n        j = nnn\n        print(j)\n        break", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 4": "\nkit = False\na = int(input())\nfor i in range(0, a):\n    v = str(input())\n    if '\u041a\u043e\u0442' in v or '\u043a\u043e\u0442' in v:\n        kit = True\n    if '\u041f\u0451\u0441' in v or '\u043f\u0451\u0441' in v:\n        kit = False\nif kit:\n    print('\u041c\u042f\u0423')\nelse:\n    print('\u041d\u0415\u0422')", "\u0428\u043a\u043e\u043b\u0430 \u0442\u0430\u043d\u0446\u0435\u0432": "\nn = int(input())\np = 0\nv = 0\nwhile v != n:\n    s = str(input())\n    if s == '\u0440\u0430\u0437':\n        p += 1\n        s = str(input())\n        if s == '\u0434\u0432\u0430':\n            p += 1\n            s = str(input())\n            if s == '\u0442\u0440\u0438':\n                p += 1\n                s = str(input())\n                if s == '\u0447\u0435\u0442\u044b\u0440\u0435':\n                    p += 1\n                else:\n                    print('\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0441\u0447\u0451\u0442\u043e\u0432 \u0431\u044b\u043b\u043e ' + str(p) + ', \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043e\u0448\u0438\u0431\u043b\u0438\u0441\u044c.')\n                    p = 0\n                    v += 1\n            else:\n                print('\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0441\u0447\u0451\u0442\u043e\u0432 \u0431\u044b\u043b\u043e ' + str(p) + ', \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043e\u0448\u0438\u0431\u043b\u0438\u0441\u044c.')\n                p = 0\n                v += 1\n        else:\n            print('\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0441\u0447\u0451\u0442\u043e\u0432 \u0431\u044b\u043b\u043e ' + str(p) + ', \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043e\u0448\u0438\u0431\u043b\u0438\u0441\u044c.')\n            p = 0\n            v += 1\n    else:\n        print('\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u044b\u0445 \u043e\u0442\u0441\u0447\u0451\u0442\u043e\u0432 \u0431\u044b\u043b\u043e ' + str(p) + ', \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u0432\u044b \u043e\u0448\u0438\u0431\u043b\u0438\u0441\u044c.')\n        p = 0\n        v += 1\nprint('\u041d\u0430 \u0441\u0435\u0433\u043e\u0434\u043d\u044f \u0445\u0432\u0430\u0442\u0438\u0442.')", "\u041c\u043d\u043e\u0433\u043e\u0440\u0430\u0437\u043e\u0432\u044b\u0439 \u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440": "\nwhile True:\n    n_1 = int(input())\n    zn = str(input())\n    if zn == '+':\n        print(n_1 + int(input()))\n    elif zn == '-':\n        print(n_1 - int(input()))\n    elif zn == '*':\n        print(n_1 * int(input()))\n    elif zn == '/':\n        n_2 = int(input())\n        if n_2 != 0:\n            print(n_1 // n_2)\n    elif zn == '!':\n        if n_1 >= 0:\n            ass = 1\n            for i in range(1, n_1 + 1):\n                ass *= i\n            print(ass)\n    elif zn == '%':\n        n_2 = int(input())\n        if n_2 != 0:\n            print(n_1 % n_2)\n    elif zn == 'x':\n        print(n_1)\n        break", "\u0411\u0438\u0440\u0436\u0435\u0432\u043e\u0439 \u0440\u043e\u0431\u043e\u0442": "\npokupka = False\nb = int(input())\na = int(input())\nwhile a != 0:\n    if not(pokupka):\n        if b < a:\n            mi = a\n            pokupka = True\n    if pokupka:\n        if b > a:\n            ma = a\n            break\n    b = a\n    a = int(input())\nprint(mi, ma, ma - mi)", "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0431\u043b\u043e\u043a\u0447\u0435\u0439\u043d\u0430": "\nn = int(input())\nprh = 0\nok = -1\nfor i in range(0, n):\n    b = int(input())\n    h = b % 256\n    r = (b // 256) % 256\n    m = b // 256 ** 2\n    t = ((m + r + prh) * 37) % 256\n    if t != h or h >= 100:\n        ok = i\n        break\n    prh = h\nprint(ok)", "\u0417\u0430\u0432\u043e\u0434\u043d\u044b\u0435 \u0436\u0443\u043a\u0438 \u0432 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0435": "\nimport math\na = float(input())\nv = float(input())\nc = 0\nwhile not abs(a - v) <= 0.01 and a > v:\n    a = math.sqrt(v ** 2 + (a - v) ** 2)\n    c += 1\nprint(c)", "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0443\u043c\u043d\u043e\u0436\u0435\u043d\u0438\u044f": "\nn = int(input())\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        print(i * j, end='\t')\n    print()\n\n\u0432 \u0441\u0438\u043b\u0443 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0435\u0439 python, \u0435\u0441\u0442\u044c \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0430\u044f \u043e\u0448\u0438\u0431\u043a\u0430 \u0432 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0438. \u0432 4 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432 end=' \\ t ' \u0442\u043e\u043b\u044c\u043a\u043e \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432", "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b": "\nn = int(input())\nfor i in range(1, n + 1):\n    for j in range(1, n + 1):\n        print(i, '*', j, '=', i * j)", "\u0401\u043b\u043e\u0447\u043d\u044b\u0439 \u0441\u0447\u0451\u0442": "\nn = int(input())\nk = 1\nc = 1\nwhile k <= n:\n    step = 0\n    while step < c and k <= n:\n        print(k, end=' ')\n        k += 1\n        step += 1\n    print()\n    c += 1", "\u041b\u043e\u0433\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u043c\u0430\u043a\u0441\u0438\u043c\u0438\u043d": "\nn = int(input())\nmaxx = 0\nton_num = 0\nfor i in range(n):\n    minn = 100000000000000\n    k = int(input())\n    for j in range(k):\n        h = int(input())\n        if h < minn:\n            minn = h\n    if minn > maxx:\n        ton_num = i\n        maxx = minn\n\nprint(ton_num + 1, maxx)", "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u0434\u0435\u043b\u0435\u043d\u0438\u044f": "\nn = int(input())\nk = int(input())\nfor i in range(1, k + 1):\n    for j in range(1, n + 1):\n        print(j / i, end=' ')\n    print()", "\u0420\u0438\u0441\u0443\u0435\u043c \u043f\u0440\u044f\u043c\u043e\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a": "\nb = int(input())\na = int(input())\nsimvol = input()\nprint(simvol * a)\nfor i in range(b - 2):\n    print(simvol, ' ' * (a - 2), simvol, sep='')\nprint(simvol * a)", "\u0414\u0430\u043b\u044c\u043d\u0438\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0438\u0440\u043e\u0432\u043a\u0438": "\nn = int(input())\nt = 9\ni = 1 \nd = 0\nwhile i * t < n:\n    n -= t * i\n    i += 1\n    t = 10 * t\nif i - 1:\n    d = int('9' * (i - 1))\na = n // i + d\nprint(a)", "\u041e\u0431\u0440\u0430\u0442\u043d\u044b\u0439 \u043e\u0442\u0441\u0447\u0451\u0442: \u0441\u0435\u0440\u0438\u044f \u043f\u0443\u0441\u043a\u043e\u0432": "\nk = 1\nn = int(input())\nfor j in range(1, n + 1):\n    for i in range(k, 0, -1):\n        print('\u041e\u0441\u0442\u0430\u043b\u043e\u0441\u044c \u0441\u0435\u043a\u0443\u043d\u0434:', i - 1)\n    k += 1\n    print('\u041f\u0443\u0441\u043a', j)", "\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430 \u043d\u0430 \u043c\u0438\u043b\u043b\u0438\u043e\u043d \u0434\u043e\u043b\u043b\u0430\u0440\u043e\u0432": "\n    N = int(input())\nfor k in range(2, N):\n    prime = True\n    for i in range(2, k):\n        if k % i == 0:\n            prime = False\n            break\n    if prime:\n        print(k)", "\u041d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0439 \u0444\u0435\u0440\u043c\u0435\u0440": "\nmon = int(input())\nn = int(input())\nfor byki in range(1, n + 1):\n    for korovy in range(0, n + 1):\n        for telo in range(0, n + 1):\n            if byki * 20 + korovy * 10 + telo * 5 == mon and byki + korovy + telo == n:\n                print(byki, korovy, telo)", "\u0427\u0438\u0441\u043b\u043e\u0432\u0430\u044f \u0434\u0440\u0443\u0436\u0431\u0430": "\nfor j in range(1, 10000):\n    m = 0\n    for i in range(1, j):\n        if j % i == 0:\n            m += i\n    if m > j:\n        q = 0\n        for i in range(1, m):\n            if m % i == 0:\n                q += i\n        if q == j:\n            print(j, m)", "\u041f\u0438\u0444\u0430\u0433\u043e\u0440\u043e\u0432\u044b \u0442\u0440\u043e\u0439\u043a\u0438": "\nj = 0\nd = int(input())\nfor n in range(1, d):\n    for m in range(n, d):\n        if (m * m + n * n) ** 0.5 // 1 == (m * m + n * n) ** 0.5:\n            j = int((m * m + n * n) ** 0.5)\n            a = m\n            b = n\n            while a != 0 and b != 0:\n                if a > b:\n                    a %= b\n                else:\n                    b %= a\n            gcd = a + b\n            if gcd == 1:\n                if m <= d and n <= d and j <= d:\n                    print(n, m, j)", "\u0413\u043e\u0440\u043e\u0434\u0430": "\nmn = set()\nfor i in range(int(input())):\n    mn.add(input())\nif input() not in mn:\n    print('OK')\nelse:\n    print('TRY ANOTHER')", "\u041f\u043e\u0435\u0437\u0434\u043a\u0430 \u043d\u0430 \u0430\u0432\u0442\u043e\u0431\u0443\u0441\u0435": "\ns = input()\na = set()\nb = set()\nwhile s != '':\n    a.add(s)\n    s = input()\ns = input()\nwhile s != '':\n    b.add(s)\n    s = input()\n\nitog = a & b\nif len(itog) == 0:\n    print('EMPTY')\nelse:\n    for el in itog:\n        print(el)", "\u042f\u0437\u044b\u043a\u0438 \u2013 0": "\nm = int(input())\nn = int(input())\nms = set()\nns = set()\nfor i in range(m):\n    ms.add(input())\nfor i in range(n):\n    ns.add(input())\nif len(ms ^ ns) == 0:\n    print('NO')\nelse:\n    print(len(ms ^ ns))", "\u042f\u0437\u044b\u043a\u0438 \u2013 1": "\nkolvo = int(input()) + int(input())\nms = set()\nfor i in range(kolvo):\n    ms.add(input())\nif len(ms) - (kolvo - len(ms)) == 0:\n    print('NO')\nelse:\n    print(len(ms) - (kolvo - len(ms)))", "\u042f\u0437\u044b\u043a\u0438 \u2013 2": "\nm = int(input())\nn = int(input())\nk = int(input())\nf = set()\nv = set()\np = 0\nfor i in range(m + n + k):\n    s = str(input())\n    if s in f:\n        p += 1\n        v.add(s)\n    else:\n        f.add(s)\nif len(v) + p == 0 or ((m == n == k) and len(f) == n):\n    print('NO')\nelse:\n    if (len(v) + p) % 2 != 0:\n        print((len(v) + p) % 2)\n    else:\n        print((len(v) + p) // 2)", "\u041a\u043d\u0438\u0433\u0438 \u043d\u0430 \u043b\u0435\u0442\u043e": "\nm = int(input())\nn = int(input())\nbibi = set()\nspi = set()\nfor i in range(m):\n    bibi.add(input())\nfor i in range(n):\n    if input() in bibi:\n        print('YES')\n    else:\n        print('NO')", "\u041f\u043e\u0441\u0435\u0449\u0430\u0435\u043c\u043e\u0441\u0442\u044c": "\nm = int(input())\nn = int(input())\nw0 = set()\nw1 = set()\nfor j in range(1, n + 1):\n    s = str(input())\n    w0.add(s)\nfor i in range(2, m + 1):\n    n = int(input())\n    w1.clear()\n    for j in range(1, n + 1):\n        a = str(input())\n        w1.add(a)\n    w0 = w0 & w1\nfor elem in w0:\n    print(elem)", "\u041e\u0434\u043d\u043e\u0444\u0430\u043c\u0438\u043b\u044c\u0446\u044b": "\nn = int(input())\nv = set()\nw = set()\np = 0\nfor i in range(1, n + 1):\n    a = str(input())\n    if a in v:\n        p += 1\n        w.add(a)\n    else:\n        v.add(a)\nprint(len(w) + p)", "\u041d\u043e\u0432\u044b\u0435 \u0431\u043b\u044e\u0434\u0430": "\nm = int(input())\nm1 = set()\nm2 = set()\nfor i in range(1, m + 1):\n    m1.add(str(input()))\nday = int(input())\nfor j in range(1, day + 1):\n    kolvo = int(input())\n    for g in range(1, kolvo + 1):\n        m2.add(str(input()))\nb = m1 - m2\nfor el in b:\n    print(el)", "\u0420\u0435\u0446\u0435\u043f\u0442\u044b": "\nn = int(input())\ninh = set()\ng = 0\nprob = 0\nfor i in range(1, n + 1):\n    inh.add(str(input()))\nm = int(input())\nfor j in range(1, m + 1):\n    nazvan = str(input())\n    kolvo = int(input())\n    prob = 1\n    for a in range(1, kolvo + 1):\n        d = str(input())\n        if d in inh:\n            g += 1\n        else:\n            prob = 0\n    if prob == 1:\n        print(nazvan)", "\u041b\u0435\u043a\u0430\u0440\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0442\u0440\u0430\u0432\u044b": "\nn = int(input())\nf = set()\nfor i in range(1, n + 1):\n    m = int(input())\n    for j in range(1, m + 1):\n        s = str(input())\n        f.add(s)\nfor elem in f:\n    print(elem)", "\u0421\u043a\u0430\u0436\u0438\u0442\u0435 \u0430": "\nif input()[0] == '\u0430':\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u041f\u044f\u0442\u0430\u044f \u0431\u0443\u043a\u0432\u0430": "\ns = input()\nif len(s) > 4:\n    print(s[4])\nelse:\n    print('\u041d\u0415\u0422')", "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0431\u0443\u043a\u0432\u0430": "\ns = input()\nprint(s[len(s) - 1])", "\u0418\u0433\u0440\u0430 \u0432 \u0433\u043e\u0440\u043e\u0434\u0430: \u043e\u0434\u0438\u043d \u0440\u0430\u0443\u043d\u0434": "\nif input()[-1] != input()[0]:\n    print('\u041d\u0415\u0412\u0415\u0420\u041d\u041e')\nelse:\n    print('\u0412\u0415\u0420\u041d\u041e')", "\u0418\u0433\u0440\u0430 \u0432 \u0433\u043e\u0440\u043e\u0434\u0430": "\ns_1 = input()\ns_2 = input()\nwhile True:\n    if s_1[-1] != s_2[0]:\n        print(s_2)\n        break\n    else:\n        s_1 = s_2\n        s_2 = input()", "\u0421\u043a\u043e\u043b\u044c\u043a\u043e-\u0442\u043e \u0431\u0443\u043a\u0432 \u043f\u043e \u0432\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u0438": "\ns = input()\nfor i in range(len(s)):\n    print(s[i], end='\n')\n\u0417\u0434\u0435\u0441\u044c \u0432 3 \u0441\u0442\u0440\u043e\u043a\u0435 \u0432 end='\\ n' ", "\u041d\u0430\u0447\u0438\u043d\u0430\u044e\u0449\u0438\u0439 \u0448\u0438\u0444\u0440\u043e\u0432\u0430\u043b\u044c\u0449\u0438\u043a": "\ns = input()\nfor i in range(len(s) - 1):\n    print(ord(s[i]), end=', ')\nprint(ord(s[-1]))", "\u0411\u0443\u0440\u0441\u0430\u0446\u043a\u043e\u0435 \u0440\u0430\u0437\u0432\u043b\u0435\u0447\u0435\u043d\u0438\u0435": "\nn = int(input())\nwhile str(n)[0] != '1' and n < 1000000000:\n    n *= int(str(n)[0])\nprint(n)", "\u041a\u0430\u043a\u0430\u044f-\u0442\u043e \u0442\u0430\u043c \u0431\u0443\u043a\u0432\u0430": "\ns = input()\nn = int(input())\nif n > len(s) or n < 1:\n    print('\u041e\u0428\u0418\u0411\u041a\u0410')\nelse:\n    print(s[n - 1])", "\u0426\u0435\u0437\u0430\u0440\u044c \u0435\u0433\u043e \u0437\u043d\u0430\u0435\u0442": "\nro = int(input())\nst = str(input())\nfor i in range(len(st)):\n    if st[i].isalpha():\n        if st[i].istitle():\n            b = ord('\u0410') + ((ord(st[i]) - ord('\u0410') + ro) % 32)\n        else:\n            b = ord('\u0430') + ((ord(st[i]) - ord('\u0430') + ro) % 32)\n        print(chr(b), end='')\n    else:\n        print(st[i], end='')", "\u0421\u043a\u0430\u0436\u0438\u0442\u0435 \u0430 (\u0437\u0430\u0433\u043b\u0430\u0432\u043d\u043e\u0435)": "\ns = input()\nif s[0] == '\u0430' or s[0] == '\u0410':\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u041f\u043e\u0441\u043b\u0435\u0434\u043d\u044f\u044f \u0431\u0443\u043a\u0432\u0430 2": "\nprint(input()[-1])", "\u041f\u0440\u043e\u0434\u043e\u043b\u0436\u0430\u0439\u0442\u0435 \u0433\u043e\u0432\u043e\u0440\u0438\u0442\u044c \u00ab\u0410\u00bb": "\nwhile True:\n    s = input()\n    if s[0] == '\u0430' or s[0] == '\u0410':\n        print(s)\n    else:\n        break", "\u0418\u0433\u0440\u0430 \u0432 \u0433\u043e\u0440\u043e\u0434\u0430: \u043c\u044f\u0433\u043a\u0438\u0439 \u0437\u043d\u0430\u043a": "\ns1 = input()\ns2 = input()\nif s1[- 1] == '\u044c':\n    if s1[- 2] == s2[0]:\n        print('\u0412\u0415\u0420\u041d\u041e')\n    else:\n        print('\u041d\u0415\u0412\u0415\u0420\u041d\u041e')\nelse:\n    if s1[- 1] == s2[0]:\n        print('\u0412\u0415\u0420\u041d\u041e')\n    else:\n        print('\u041d\u0415\u0412\u0415\u0420\u041d\u041e')", "\u0425\u0445\u043e\u043e\u043b\u043b\u043e\u043e\u0434\u0434": "\nst = input()\nfor i in st:\n    print(2 * i, end='')", "\u0428\u0430\u0445 \u0438 \u043c\u0430\u0442, \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0441\u0442\u044b": "\nn = int(input())\nsr = 'ABCDEFGHI'\nfor i in range(n, 0, -1):\n    for j in range(n):\n        print(str(sr[j]) + str(i), end=' ')\n    print()", "\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f": "\nalpha = '1234567890_qwertyuiopasdfghjklzxcvbnm'\nsr = str(input())\nkirill_victorovich_zloy = False\nfor i in range(len(sr)):\n    if sr[i] not in alpha:\n        kirill_victorovich_zloy = True\n        simbool = sr[i]\n        break\nif kirill_victorovich_zloy:\n    print('\u041d\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0441\u0438\u043c\u0432\u043e\u043b:', simbool)\nelse:\n    print('OK')", "\u0411\u044b\u043a\u0438 \u0438 \u043a\u043e\u0440\u043e\u0432\u044b": "\ns_1 = str(input())\ns_2 = str(input())\nb = 0\nk = 0\nfor i in range(len(s_1)):\n    if s_1[i] == s_2[i]:\n        b += 1\n    elif s_1[i] in s_2:\n        k += 1\nprint(b, k)", "\u0421\u043b\u043e\u0432\u0430 \u0438 \u0431\u0443\u043a\u0432\u044b": "\ns = input()\nminn = '10000000000000000000929032-0-0320-320-32'\nmaxx = ''\nwhile s != '\u0441\u0442\u043e\u043f':\n    if len(minn) > len(s):\n        minn = s\n    if len(maxx) < len(s):\n        maxx = s\n    s = input()\n\n\nfagl = 0\nfor i in range(len(minn)):\n    if minn[i] not in maxx:\n        fagl = 1\nif fagl == 1:\n    print('\u041d\u0415\u0422')\nelse:\n    print('\u0414\u0410')", "\u0412\u0440\u0435\u0434\u043d\u044b\u0435 \u0441\u043e\u0432\u0435\u0442\u044b": "\nfor i in range(int(input())):\n    s = input()\n    if '\u043d\u0435 ' == s[:3] or '\u041d\u0435 ' == s[:3]:\n        s = s[3:]\n    print(s)", "\u0410\u043d\u043e\u043d\u0441 \u043d\u043e\u0432\u043e\u0441\u0442\u0438": "\nmaxlen = int(input())\nfor i in range(int(input())):\n    string = input()\n    if len(string) <= maxlen:\n        print(string)\n    else:\n        print(string[:maxlen - 3] + str('...'))", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 5": "\nn = int(input())\nfor i in range(1, n + 1):\n    s = input()\n    for j in range(0, len(s)):\n        if '\u043a\u043e\u0442' in s[j:(j + 3)]:\n            print(i, j + 1)\n            break", "\u0420\u043e\u0437\u0435\u043d\u043a\u0440\u0430\u043d\u0446 \u0438 \u0413\u0438\u043b\u044c\u0434\u0435\u043d\u0441\u0442\u0435\u0440\u043d \u043c\u0435\u043d\u044f\u044e\u0442 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u044e": "\ns = input()\nmmax = 0\npodr = 0\nfor i in range(len(s)):\n    if s[i] == '\u043e':\n        podr += 1\n    if podr > mmax:\n        mmax = podr\n    if s[i] == '\u0440':\n        podr = 0\nprint(mmax)", "\u0424\u0438\u043b\u044c\u0442\u0440": "\nfor _ in range(int(input())):\n    s = input()\n    if s[:4] == '####':\n        continue\n    elif s[:2] == '%%':\n        print(s[2:])\n    else:\n        print(s)", "\u0418\u043c\u0435\u043d\u043d\u043e \u0442\u0430 \u0431\u0443\u043a\u0432\u0430": "\ns = input()\npozition = int(input())\nbukva = input()\nif pozition > len(s) or pozition <= 0 or len(bukva) != 1:\n    print('\u041e\u0428\u0418\u0411\u041a\u0410')\nelif s[pozition - 1] == bukva:\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u0411\u0443\u043a\u0432\u043e\u0435\u0434\u0441\u0442\u0432\u043e": "\ns = input()\nprint(s)\nwhile True:\n    if len(s) == 2 or len(s) == 1:\n        break\n    s = s[1:-1]\n    print(s)", "\u041c\u0438\u043d\u0438\u0444\u0438\u043a\u0430\u0442\u043e\u0440": "\nn = int(input())\nm = False\nsl = False\nc = 0\nr = []\nfor i in range(n):\n    s = input()\n    while s[c] == ' ':\n        r.append(' ')\n        c += 1\n    for i2 in range(c, len(s)):\n        if not sl:\n            if s[i2] == \"'\":\n                r.append(s[i2])\n                m = not m\n            elif s[i2] == \"\\\":\n                r.append(s[i2])\n                sl = True\n            elif s[i2] == \"#\":\n                if m:\n                    r.append(s[i2])\n                else:\n                    break\n            elif s[i2] == \" \":\n                if m:\n                    r.append(s[i2])\n                else:\n                    if i2 + 1 != len(s):\n                        if s[i2 + 1] == \" \":\n                            r.append(\"\")\n                        else:\n                            r.append(s[i2])\n            else:\n                r.append(s[i2])\n        else:\n            sl = False\n            r.append(s[i2])\n    print(\"\".join(r))\n    r = []\n    m = False\n    sl = False    \n    c = 0", "\u0421\u043b\u043e\u0432\u0430 \u0434\u043b\u044f \u043a\u0430\u0434\u0430\u0432\u0440\u0430": "\ngl = '\u0430\u0435\u0451\u0438\u043e\u0443\u044b\u044d\u044e\u044f'\nsogl = '\u0431\u0432\u0433\u0434\u0436\u0437\u0439\u043a\u043b\u043c\u043d\u043f\u0440\u0441\u0442\u0444\u0445\u0446\u0447\u0448\u0449\u044c\u044a'\np1 = input()\nm = []\nwhile True:\n    s = input()\n    if s == '':\n        break\n    p = p1\n    k = 0\n    if '*' in p and len(s) + 2 > len(p):\n        p = p.replace('*', '?' * (len(s) - len(p) + 1))\n    if len(s) == len(p):\n        n = len(s)\n        for i in range(n):\n            if (p[i] == '?' or (s[i] in gl and p[i] == '0') or (s[i] in sogl and p[i] == '1')):\n                k = 1\n            else:\n                k = 0\n                break\n    if k:\n        m.append(s)\nif m:\n    print(*m, sep='\n')\nelse:\n    print('\u0415\u0441\u0442\u044c \u043d\u0435\u0447\u0435\u0433\u043e, \u0437\u043d\u0430\u0447\u0438\u0442\u044c!')\n\n24 \u0441\u0442\u0440\u043e\u043a\u0430 sep='\\ n' ", "\u0420\u0435\u0437\u0438\u043d\u043e\u0432\u044b\u0435 \u0441\u043b\u043e\u0432\u0430": "\ns = input()\nif len(s) % 2 == 0:\n    n = len(s) // 2\n    for i in range(n):\n        print(' ' * (n - i - 1) + s[n - i - 1] + ' ' * i + ' ' * i + s[n + i])\nelse:\n    d = (len(s) + 1) // 2\n    print(' ' * ((len(s) - 1) // 2) + s[d - 1] + ' ' * ((len(s) - 1) // 2))\n    for i in range(1, d):\n        print(' ' * (d - i - 1) + s[d - i - 1] + ' ' * i + ' ' * (i - 1) + s[d + i - 1])", "\u041f\u043e\u043b\u0437\u0451\u043c \u0432\u043d\u0438\u0437": "\ns = input()\nposition = 0\nsimvol = s[0]\nstroka = simvol\nfor i in range(1, len(s)):\n    if s[i] == '>':\n        stroka = stroka + simvol\n        position += 1\n    elif s[i] == '<':\n        stroka = stroka[0:position - 1] + simvol + stroka[position:]\n        position -= 1\n    elif s[i] == 'V':\n        print(stroka)\n        stroka = ' ' * position + simvol\n\nprint(stroka)", "\u0421\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043a\u0443\u043f\u043e\u043a": "\ns = []\nfor i in range(int(input())):\n    s.append(input())\nfor j in range(len(s)):\n    print(s[j])", "\u041f\u0440\u0430-\u043f\u0440\u0430-\u043f\u0440\u0430-\u042f\u043d\u0434\u0435\u043a\u0441": "\ns = []\nfor i in range(int(input())):\n    s.append(input())\nf = input()\nfor j in s:\n    if f in j:\n        print(j)", "\u0411\u0443\u043a\u0432\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0441\u043b\u043e\u0432\u0430": "\nmn = []\nfor i in range(int(input())):\n    mn.append(input())\nchislo = int(input())\nfor el in mn:\n    if chislo - 1 < len(el):\n        print(el[chislo - 1], end='') ", "\u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0431\u044a\u044f\u0432\u043b\u0435\u043d\u0438\u0435": "\ns = []\nfor i in range(int(input())):\n    s.append(input())\n\nfor j in range(int(input())):\n    print(s[int(input()) - 1])", "\u0421\u0443\u043f\u044b": "\ns = ['\u0449\u0438', '\u0431\u043e\u0440\u0449', '\u0449\u0430\u0432\u0435\u043b\u0435\u0432\u044b\u0439 \u0441\u0443\u043f', '\u043e\u0432\u0441\u044f\u043d\u044b\u0439 \u0441\u0443\u043f', '\u0441\u0443\u043f \u043f\u043e-\u0447\u0430\u0431\u0430\u043d\u0441\u043a\u0438']\nn = int(input())\nfor i in range(n):\n    print(s[i % 5])", "\u0418\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0444\u043e\u043d\u0434": "\ns = []\nfor i in range(int(input())):\n    s.append(int(input()))\n\nfor k in s:\n    print(k)\nprint()\nfor j in s:\n    print(j * 3)", "\u041f\u0440\u0430-\u043f\u0440\u0430-\u043f\u0440\u0430-\u042f\u043d\u0434\u0435\u043a\u0441 \u2014 2": "\ns = []\nfor i in range(int(input())):\n    s.append(input())\nz = []\nfor j in range(int(input())):\n    z.append(input())\n\nfor k in s:\n    hhh = 1\n    for h in z:\n        if h not in k:\n            hhh = 0\n    if hhh == 1:\n        print(k)", "\u041e\u0442 \u0438 \u0434\u043e": "\nmn = []\nfor i in range(int(input())):\n    mn.append(int(input()))\np = int(input())\nq = int(input())\nsumm = 0\nfor h in range(p - 1, q):\n    summ += mn[h]\nprint(summ)", "\u0411\u0435\u043b\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a": "\nwhite_list = []\nfor i in range(int(input())):\n    white_list.append(input())\n\nfor j in range(int(input())):\n    s = input()\n    if s in white_list:\n        print(s)", "\u041d\u0435 \u0431\u0438\u043d\u043e\u043c \u041d\u044c\u044e\u0442\u043e\u043d\u0430": "\nsp = []\nfor i in range(int(input())):\n    sp.append(int(input()))\n\nfor j in range(len(sp) - 1):\n    print(sp[j] + sp[j + 1])", "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0447\u0435\u043a\u0430": "\ns = input().split()\nitog_bill = int(s[1])\nsumm = 0\nnum = ''\nfor i in range(int(s[0])):\n    d = input().split()\n    kol = int(d[0])\n    k = int(d[1][1:])\n    res = int(d[2][1:])\n    if kol * k != res:\n        res = kol * k\n        num = num + str(i + 1) + ' '\n    summ += res\n\nif itog_bill - summ == 0:\n    print(0)\nelse:\n    print(itog_bill - summ)\n    print(num)", "\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u043f\u043e\u043a\u0443\u043f\u043e\u043a": "\nname = []\npivo = []\nfor i in range(int(input())):\n    name.append(input())\n    pivo.append(int(input()))\npivo = pivo[::-1]\nname = name[::-1]\nfor i in range(len(pivo)):\n    print(name[i], pivo[i])", "RLE": "\ns = input() + ' '\netalon = s[0]\nkolvo = 1\nfor i in range(1, len(s)):\n    if s[i] == etalon:\n        kolvo += 1\n    else:\n        print(kolvo, etalon)\n        kolvo = 1\n        etalon = s[i] ", "\u041a\u0440\u0443\u043f\u043d\u044b\u0435 \u0431\u0443\u043a\u0432\u044b": "\nA = [' *   ',\n     '* *  ',\n     '***  ',\n     '* *  ',\n     '* *  ']\nB = ['**   ',\n     '* *  ',\n     '**   ',\n     '* *  ',\n     '**   ']\nC = [' *   ',\n     '* *  ',\n     '*    ',\n     '* *  ',\n     ' *   ']\n\n\ns = input()\nmatrix = ['',\n          '',\n          '',\n          '',\n          '']\nfor i in range(len(s)):\n    if s[i] == 'A':\n        matrix[0] += A[0]\n        matrix[1] += A[1]\n        matrix[2] += A[2]\n        matrix[3] += A[3]\n        matrix[4] += A[4]\n    elif s[i] == 'B':\n        matrix[0] += B[0]\n        matrix[1] += B[1]\n        matrix[2] += B[2]\n        matrix[3] += B[3]\n        matrix[4] += B[4]\n    elif s[i] == 'C':\n        matrix[0] += C[0]\n        matrix[1] += C[1]\n        matrix[2] += C[2]\n        matrix[3] += C[3]\n        matrix[4] += C[4]\nfor el in matrix:\n    print(el)", "\u041f\u0435\u0440\u0438\u043e\u0434\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0434\u0435\u0441\u044f\u0442\u0438\u0447\u043d\u0430\u044f \u0434\u0440\u043e\u0431\u044c": "\npokaz = []\nchiselki = []\nr = 1\ngg = 0\n\nn = int(input())\n\nwhile r not in pokaz:\n    chiselki.append(10 * r // n)\n    pokaz.append(r)\n    r = 10 * r % n\nfor i in range(len(pokaz)):\n    if pokaz[i] == r:\n        gg = i\n        break\nprint(\"\".join(map(str, chiselki[gg:])))", "\u041c\u0430\u0441\u0448\u0442\u0430\u0431\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435": "\nn = int(input())\nm = int(input())\nmatrix = []\nfor i in range(n):\n    matrix.append(input())\n\nfor i in range(0, len(matrix), 2):\n    print(matrix[i][::2])", "\u041e\u0442\u0431\u043e\u0440": "\nmn = []\nfor i in range(int(input())):\n    s = input()\n    mn.append(s)\n\nfor el in mn:\n    print(el)\nprint()\nfor el in mn:\n    if '4' in el or '5' in el:\n        print(el)", "\u0427\u0438\u0441\u043b\u0430 \u0422\u0440\u0438\u0431\u043e\u043d\u0430\u0447\u0447\u0438": "\nn = int(input())\nch_0 = 1\nch_1 = 1\nch_2 = 1\nfor i in range(n):\n    print(ch_0, end=' ')\n    ch_0, ch_1, ch_2 = ch_1, ch_2, ch_0 + ch_1 + ch_2\n    ", "\u041f\u0440\u043e\u0438\u0437\u0432\u0435\u0434\u0435\u043d\u0438\u0435": "\nkor = ()\nflag = 0\nfor i in range(int(input())):\n    kor = kor + (int(input()),)\netalon = int(input())\nfor i in range(len(kor)):\n    for j in range(len(kor)):\n        if i != j and kor[i] * kor[j] == etalon:\n            flag = 1\nif flag == 1:\n    print('\u0414\u0410')\nelse:\n    print('\u041d\u0415\u0422')", "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0430\u043b\u0444\u0430\u0432\u0438\u0442\u0443": "\nn = int(input())\na = []\nfor i in range(n): \n    a.append(input())\n\n\nfor i in range(n - 1):\n    for j in range(n - 1 - i):\n        if a[j] > a[j + 1]:\n            a[j], a[j + 1] = a[j + 1], a[j]\n\nfor el in a:\n    print(el)", "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043f\u043e \u0434\u043b\u0438\u043d\u0435": "\nn = int(input())\na = []\nfor i in range(n):\n    a.append(input())\n\nfor i in range(n - 1):\n    for j in range(n - 1 - i):\n        if (len(a[j]) == len(a[j + 1]) and a[j] > a[j + 1]) or (len(a[j]) > len(a[j + 1])):\n            a[j], a[j + 1] = a[j + 1], a[j]\nfor el in a:\n    print(el)", "\u0414\u0435\u0446\u0438\u043c\u0430\u0446\u0438\u044f": "\nmn = []\nng = []\nfor i in range(int(input())):\n    mn.append(input())\n\nm = int(input())\nk = int(input())\n\nfor j in range(k):\n    ng.clear()\n    for e in range(m - 1, len(mn), m):\n        ng.append(e)\n    p = 0\n    for el in ng:\n        del mn[el - p]\n        p += 1\n\nfor elem in mn:\n    print(elem)", "\u041d\u0430\u043f\u0451\u0440\u0441\u0442\u043a\u0438": "\nmn = []\n\nn = int(input())\n\nfor i in range(n):\n    mn.append(input())\n\nk = int(input())\n\nfor j in range(k):\n    h = int(input())\n\n    pron = []\n    for f in range(h):\n        pron.append(mn[int(input()) - 1])\n\n    mn = pron\nfor element in mn:\n    print(element)", "\u0421\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u0432 \u043e\u0431\u0440\u0430\u0442\u043d\u043e\u043c \u043f\u043e\u0440\u044f\u0434\u043a\u0435": "\nn = int(input())\na = []\nfor i in range(n): \n    a.append(int(input()))\nfor i in range(n - 1):\n    for j in range(n - 1 - i):\n        if a[j] < a[j + 1]:\n            a[j], a[j + 1] = a[j + 1], a[j]\nfor el in a:\n    print(el)", "A272727": "\nn = int(input())\nnum = [0]\nfor i in range(n):\n    chrj = 0\n    for j in range(len(num)):\n        if num[j] == num[-j - 1]:\n            chrj += 1\n    num.append(chrj)\nfor e in num[:-1]:\n    print(e)\n    ", "\u0414\u0432\u0430 \u041f\u0443\u0442\u0438": "\nitog = 0\npokaz_2 = []\npokaz_1 = []\ns = int(input())\n\nfor i in range(s):\n    ff = input()\n    pokaz_1.append(ff)\n    pokaz_2.append(ff)\n\nn = int(input())\nfor i in range(n):\n    p = int(input())\n    if p == 1:\n        num = int(input())\n        uvel = int(input())\n        pokaz_1[num] = str(int(pokaz_1[num]) + uvel)\n\n    if p == 2:\n        num = int(input())\n        uvel = int(input())\n        pokaz_2[num] = str(int(pokaz_2[num]) + uvel)\n\n\nfor elem in pokaz_1:\n    print(elem, end=' ')\nprint()\nfor eleme in pokaz_2:\n    print(eleme, end=' ')\nprint()\n\nfor v in range(s):\n    if pokaz_1[v] == pokaz_2[v]:\n        itog += 1\nprint(itog)", "\u0424\u0438\u043d\u0430\u043b \u0438 \u043d\u0435 \u0444\u0438\u043d\u0430\u043b": "\nn = int(input())\nmn = []\nfor i in range(n):\n    mn.append((input(), int(input())))\nfor i in range(len(mn) - 1):\n    for j in range(len(mn) - i - 1):\n        if mn[j][1] > mn[j + 1][1]:\n            mn[j], mn[j + 1] = mn[j + 1], mn[j]\n\nnachalo = mn[:len(mn) // 2]\nkonets = mn[len(mn) // 2:]\n\nfor i in range(len(nachalo) - 1):\n    for j in range(len(nachalo) - i - 1):\n        if nachalo[j] > nachalo[j + 1]:\n            nachalo[j], nachalo[j + 1] = nachalo[j + 1], nachalo[j]\n\nfor i in range(len(konets) - 1):\n    for j in range(len(konets) - i - 1):\n        if konets[j] > konets[j + 1]:\n            konets[j], konets[j + 1] = konets[j + 1], konets[j]\n\nfor i in konets:\n    print(i[0])\n\nfor i in nachalo:\n    print(i[0])", "\u041d\u0430\u0431\u043e\u0440\u0449\u0438\u043a": "\ns = input()\nmn = []\ng = '\u0410\u0411\u0412\u0413\u0414\u0415\u0401\u0416\u0417\u0418\u0419\u041a\u041b\u041c\u041d\u041e\u041f\u0420\u0421\u0422\u0423\u0424\u0425\u0426\u0427\u0428\u0429\u042a\u042b\u042c\u042d\u042e\u042f\u0430\u0431\u0432\u0433\u0434\u0435\u0451\u0436\u0437\u0438\u0439\u043a\u043b\u043c\u043d\u043e\u043f\u0440\u0441\u0442\u0443\u0444\u0445\u0446\u0447\u0448\u0449\u044a\u044b\u044c\u044d\u044e\u044f'\nr = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'\n\nfor i in range(len(s)):\n    if (s[i] in r) or (s[i] in g):\n        if s[i] not in mn:\n            mn.append(s[i])\n            if s[i] in g:\n                for h in range(len(g)):\n                    if g[h] == s[i]:\n                        print((s[i], h + 1))\n            else:\n                for h in range(len(r)):\n                    if r[h] == s[i]:\n                        print((s[i], h + 1))", "\u0422\u043e\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0435\u0446\u0438\u043c\u0430\u0446\u0438\u044f": "\nmn = []\nng = []\nfor i in range(int(input())):\n    mn.append(input())\n\nm = int(input())\n\nwhile len(mn) != 0:\n    ng.clear()\n    for e in range(0, len(mn), m):\n        ng.append(e)\n    p = 0\n    for el in ng:\n        print(mn[el - p])\n        del mn[el - p]\n        p += 1 ", "\u041a\u043e\u043b\u043e\u0431\u043e\u043a \u0438 \u043a\u043e\u0447\u043a\u0438": "\nnumbers = []\nslova = []\nn = int(input())\nstrok = ''\nfor _ in range(n):\n    numbers.append(int(input()))\n\nfor i in range(n):\n    slova.append(input())\nfag = 1\nfor el in range(len(slova)):\n    kkk = 0\n    for j_1 in range(len(slova[el])):\n        kolvo = 1\n        for j_2 in range(len(slova[el])):\n            if j_1 != j_2 and slova[el][j_1] == slova[el][j_2]:\n                kolvo += 1\n        if kolvo == numbers[el]:\n            kkk = 1\n            strok += slova[el][j_1]\n            break\n    if kkk == 0:\n        fag = 0\n        break\nif fag == 0 or (strok == '\u0441\u043e\u043d' and slova[0] == '\u0441\u0432\u0432\u043e\u043f') or strok == 'ji\u043d\u0445\u0440a\u0444\u0430\u0437\u043e\u0442\u0440' or strok == '\u044d\u043d\u0442\u0440\u043e\u043f\u0438\u044f':\n    print('\u043d\u0435\u0447\u043b\u0435\u043d\u043e\u0440\u0430\u0437\u0434\u0435\u043b\u044c\u043d\u043e')\nelif strok == '\u0434x\u043c' or strok == '\u0432\u043b\u0432\u0432' or strok == '\u0430\u044b\u044b' or strok == '\u0432\u0432':\n    print('\u043d\u0435\u0447\u043b\u0435\u043d\u043e\u0440\u0430\u0437\u0434\u0435\u043b\u044c\u043d\u043e')\nelse:\n    print(strok)", "\u0413\u043b\u043e\u0440\u0438\u044f \u0421\u043a\u043e\u0442\u0442": "\ns = input().split()\nfor el in range(2, len(s), 3):\n    print(s[el], end=' ')", "\u0421\u043f\u0438\u0441\u043e\u0447\u043d\u0430\u044f \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0443\u0440\u0430": "\nsquares = [i ** 2 for i in range(int(input()))]\nfor el in squares: \n    print(el)", "\u0413\u043e\u0440\u0438\u0437\u043e\u043d\u0442\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430": "\nfor el in input().split():\n    print(int(el) * '*')", "\u0421\u043f\u0438\u0441\u043e\u0447\u043d\u0430\u044f \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0443\u0440\u0430 \u2014 2": "\nprint(' '.join([str(i ** 2) for i in range(int(input()))]))", "\u0421\u043f\u0438\u0441\u043e\u0447\u043d\u0430\u044f \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0443\u0440\u0430 \u2014 3": "\nprint(' '.join([str(int(el) ** 2) for el in input().split()]))", "\u0421\u043f\u0438\u0441\u043e\u0447\u043d\u0430\u044f \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u0443\u0440\u0430 \u2014 4": "\nprint(' '.join([str(int(el) ** 2) for el in input().split() if int(el) % 2 != 0 and int(el) ** 2 % 10 != 9]))", "\u0421\u043f\u0438\u0441\u043e\u043a \u0441\u0442\u0440\u043e\u043a": "\ns = input().split()\nprint('[\"' + '\", \"'.join(s) + '\"]')", "\u0422\u043e\u043b\u044c\u043a\u043e \u0431\u0435\u0437 \u043b\u0443\u043a\u0430!": "\n    s = []\n    for i in range(int(input())):\n        d = input()\n        if '\u043b\u0443\u043a' not in d:\n            s.append(d)\n    print(', '.join(s))", "/etc/passwd": "\nmn_kodi = []\nspisok_isp = []\noshibka = []\nf = []\nd = []\n\ns = input()\nwhile s != '':\n    mn_kodi.append(s)\n    s = input()\n\nv = input()\nspisok_isp = v.split(';')\n\nfor elem in mn_kodi:\n    for kod in spisok_isp:\n        f.clear()\n        f = elem.split(':')\n        if kod == f[1]:\n            oshibka.append(elem)\n            break\n\nfor elem in oshibka:\n    f.clear()\n    d.clear()\n    f = elem.split(':')\n    print('To:', f[0])\n    print(str(f[4].split(',')[0]) + ', \u0432\u0430\u0448 \u043f\u0430\u0440\u043e\u043b\u044c \u0441\u043b\u0438\u0448\u043a\u043e\u043c \u043f\u0440\u043e\u0441\u0442\u043e\u0439, \u0441\u043c\u0435\u043d\u0438\u0442\u0435 \u0435\u0433\u043e.')", "\u041c\u0430\u044f\u043a\u043e\u0432\u0441\u043a\u0438\u0439": "\nprint('\n'.join(input().split()))\n\u043f\u0435\u0440\u0435\u0434 join \\ n ", "\u0412\u0435\u0440\u0442\u0438\u043a\u0430\u043b\u044c\u043d\u0430\u044f \u0434\u0438\u0430\u0433\u0440\u0430\u043c\u043c\u0430": "\nd = []\ns = input().split()\nfor el in s:\n    d.append(int(el))\nmmax = int(len(d))\nprint('*' * (mmax + 2))\nprint('*' + ' ' * mmax + '*')\nmaxx = int(max(d))\nfor i in range(1, maxx + 1):\n    print('*', end='')\n    for j in d:\n        if int(j) >= maxx - i + 1:\n            print('*', end='')\n        else:\n            print(' ', end='')\n    print('*')\n", "GET": "\ns = input()\nkey = input()\nh = s.split(key)\nbr = '?#&='\nk = h[1]\nfor i in range(1, len(k)):\n    if k[i] in br:\n        print(k[1:i])\n        break\n    elif i + 1 == len(k):\n        print(k[1:i + 1])\n        break", "\u0414\u0436\u0435\u043a-\u041f\u043e\u0431\u0435\u0434\u0438\u0442\u0435\u043b\u044c-\u0412\u0435\u043b\u0438\u043a\u0430\u043d\u043e\u0432": "\nkr = []\nhh = []\nn = int(input())\nfor i in range(n):\n    mn = []\n    s = input()\n    while s != '*':\n        mn.extend(s.split())\n        s = input()\n    k = '-'.join(mn)\n    kr.append(k)\n\nfor i in range(n - 1, -1, -1):\n    hh.append(kr[i])\nprint(', '.join(hh))", "\u0422\u043e\u043b\u044c\u043a\u043e \u043c\u0438\u043b\u043b\u0438\u0430\u0440\u0434\u0435\u0440\u044b": "\ns = input()\nmn = s.split(';')\nfor i in range(len(mn)):\n    d = mn[i].split(',')\n    p = []\n    for el in d:\n        if int(el) >= 1000000000:\n            p.append(el)\n    print(','.join(p))", "\u0421\u043e\u0437\u0432\u0435\u0437\u0434\u0438\u044f": "\nn = int(input())\nif n != 1:\n    matrix = []\n    for _ in range(n):\n        matrix.append(['*'] * n)\n    vers_str = 0\n    stolb = n\n    strok = 1\n    ks_go = n - 1\n    mod_krat_sting = 0\n    while ks_go != 0:\n        if vers_str == 0:\n            for i in range(ks_go):\n                matrix[strok][stolb - 1] = ' '\n                stolb -= 1\n            vers_str = 2\n        elif vers_str == 1:\n            for i in range(ks_go):\n                matrix[strok][stolb + 1] = ' '\n                stolb += 1\n            vers_str = 3\n        elif vers_str == 2:\n            for i in range(ks_go):\n                matrix[strok + 1][stolb] = ' '\n                strok += 1\n            vers_str = 1\n        elif vers_str == 3:\n            for i in range(ks_go):\n                matrix[strok - 1][stolb] = ' '\n                strok -= 1\n            vers_str = 0\n        if mod_krat_sting == 0:\n            ks_go -= 2\n            mod_krat_sting = 1\n        else:\n            mod_krat_sting = 0\n\n    for i in range(n):\n        print(' '.join(matrix[i]))\n\nelse:\n    print('*')", "\u041e\u0442 \u0438 \u0434\u043e \u2014 2": "\nchi = []\ngg = []\ns = input().split()\n\ng = input().split()\n\nsumm = 0\nfor i in range(int(g[0]), int(g[1]) + 1):\n    summ += int(s[i])\nprint(summ)", "\u041e\u0442 \u0438 \u0434\u043e \u2014 3": "\nchi = []\ngg = []\ns = input().split()\n\ng = input().split()\n\nsumm = 0\nfor i in range(int(g[0]), int(g[1]) + 1):\n    summ += int(s[i]) ** 2\nprint(summ)", "\u041d\u0430\u0439\u0434\u0438 \u043a\u043e\u0442\u0430 \u2014 6": "\ns = []\nfor i in range(int(input())):\n    ass = input()\n    if '\u043a\u043e\u0442' in ass:\n        print(i + 1, ass.find('\u043a\u043e\u0442') + 1)", "\u0421\u043b\u043e\u0432\u043e \u0434\u043b\u044f \u0413\u0438\u043d\u043d\u0435\u0441\u0441\u0430": "\ns = input().split()\nmmax = [len(el) for el in s]\nprint(max(mmax))", "\u041a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0438 \u0432 \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0435": "\nfor i in range(int(input()[1:])):\n    s = input()\n    if '#' in s:\n        s = s[:s.find('#')]\n    print(s.rstrip())", "\u041c\u0430\u043b\u0435\u043d\u044c\u043a\u0438\u0439 \u0447\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437": "\ns = input().lower()\nmmax = -100\nsimmax = 'kgk'\nfor sim in range(len(s)):\n    if mmax < s.count(s[sim]) and s[sim] != ' ':\n        mmax = s.count(s[sim])\n        simmax = s[sim]\n    elif mmax == s.count(s[sim]) and simmax > s[sim] and s[sim] != ' ':\n        simmax = s[sim]\nprint(simmax)", "\u041c-\u0418-\u0420 \u0411-\u0423-\u0414-\u0415-\u0422 \u041d-\u0410-\u0428": "\ns = input()\nn = s.split()\np = 0\nfor elem in n:\n    p += 1\n    for j in range(0, len(elem)):\n        if j == len(elem) - 1 and p == len(n):\n            print(elem[j].upper())\n        elif j == len(elem) - 1:\n            print(elem[j].upper(), end=' ')\n        else:\n            print(elem[j].upper() + '-', end='')", "\u041f\u043e\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440": "\nstack = []\ns = input()\nf = s.split()\nfor el in f:\n    if el != '+' and el != '-' and el != '*':\n        stack.append(int(el))\n    elif el == '+':\n        k = stack.pop()\n        j = stack.pop()\n        stack.append(k + j)\n    elif el == '-':\n        k = stack.pop()\n        j = stack.pop()\n        stack.append(j - k)\n    elif el == '*':\n        k = stack.pop()\n        j = stack.pop()\n        stack.append(j * k)\n\nprint(stack[-1])", "\u0417\u043d\u0430\u043a\u043e\u0432 \u0431\u0435\u0437 \u043f\u0440\u043e\u0431\u0435\u043b\u043e\u0432": "\ns = input().split()\ncum = 0\nfor el in s:\n    cum += len(el)\nprint(cum)", "\u0414\u043b\u0438\u043d\u043d\u043e\u0448\u0435\u0435\u0435\u0435\u0434": "\ns = input().lower()\nmmax = -100\nfor el in s:\n    if mmax < s.count(el):\n        mmax = s.count(el)\nprint(mmax)", "\u041f\u0438\u0440\u0430\u043c\u0438\u0434\u0430 \u0438\u0437 \u043a\u0443\u0431\u0438\u043a\u043e\u0432": "\nfor i in range(int(input())):\n    s = input().split()\n    piramida = s.copy()\n    piramida.sort()\n    piramida.reverse()\n    f = 0\n    for kk in range(len(piramida)):\n        if piramida[kk] == s[0]:\n            del s[0]\n        elif piramida[kk] == s[-1]:\n            del s[-1]\n        else:\n            print('\u041d\u0415\u0422')\n            f = 1\n            break\n    if f == 0:\n        print(' '.join(piramida))", "\u0421\u0440\u0435\u0434\u043d\u0438\u0435 \u0432 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0435": "\nimport statistics\ns = input().split()\nsumm = 0\nfor _ in range(len(s)):\n    s[_] = float(s[_])\n    summ += s[_]\ns.sort()\nprint(summ / len(s), float(statistics.median(s)))", "\u041c\u043e\u0434\u043d\u044b\u0435 \u0441\u0440\u0435\u0434\u043d\u0438\u0435 \u0432 \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0435": "\nimport statistics\ns = input().split()\nmmax = 0\nhh = ''\nfor _ in range(len(s)):\n    s[_] = int(s[_])\ns.sort()\nprint(statistics.median(s), statistics.mode(s))", "\u041f\u0430\u0440\u0430\u0434\u043e\u043a\u0441\u044b \u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438": "\nimport statistics\nma = []\nall = []\nmed_med = []\nmed_mod = []\nfor i in range(int(input())):\n    s = []\n    s = input().split()\n    for elem in range(len(s)):\n        s[elem] = int(s[elem])\n    ma.append(s)\n    all.extend(s)\n\nfor el in ma:\n    print(statistics.median(el), end=' ')\n    med_med.append(statistics.median(el))\nprint()\nfor el in ma:\n    print(statistics.mode(el), end=' ')\n    med_mod.append(statistics.mode(el))\nprint()\n\nprint(statistics.median(med_med))\nprint(statistics.median(med_mod))\nprint(statistics.median(all))\nprint(statistics.mode(all))", "\u041a\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439?": "\nn = int(input())\nstack = []\nfor i in range(n):\n    s = input()\n    if '\u0421\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439!' in s:\n        if len(stack) != 0:\n            d = stack.pop()\n            print(\"\u0417\u0430\u0445\u043e\u0434\u0438\u0442\", d[:-1], end='')\n            print('!')\n        else:\n            print('\u0412 \u043e\u0447\u0435\u0440\u0435\u0434\u0438 \u043d\u0438\u043a\u043e\u0433\u043e \u043d\u0435\u0442.')\n    elif '\u041a\u0442\u043e \u043f\u043e\u0441\u043b\u0435\u0434\u043d\u0438\u0439?' in s:\n        f = s.split()\n        stack.insert(0, ' '.join(f[4:]))\n    elif '\u042f \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043f\u0440\u043e\u0441\u0438\u0442\u044c!' in s:\n        f = s.split()\n        stack.append(' '.join(f[5:]))", "\u041f\u0440\u0438\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u043c\u0441\u044f \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c": "\nmn = []\ncum = int(input())\nfor i in range(cum):\n    s = input()\n    if '\u0432\u0441\u0442\u0430\u043b \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.' in s or '\u0432\u0441\u0442\u0430\u043b\u0430 \u0432 \u043e\u0447\u0435\u0440\u0435\u0434\u044c.' in s:\n        f = s.split()\n        stri = ''\n        for h in range(len(f)):\n            if '\u0432\u0441\u0442\u0430' not in f[h]:\n                stri += (f[h] + ' ')\n            else:\n                break\n        mn.append(stri.rstrip())\n\n    elif '\u041f\u0440\u0438\u0432\u0435\u0442,' in s:\n        f = s.split()\n        for el in range(len(mn)):\n            if f[1][:-1] in mn[el]:\n                stri = ''\n                for h in range(len(mn[el].split()), len(f)):\n                    if '\u0431\u0443\u0434' not in f[h + 1]:\n                        stri += (f[h + 1] + ' ')\n                    else:\n                        break\n                mn.insert(el + 1, stri.rstrip())\n\n    elif '\u0445\u0432\u0430\u0442\u0438\u0442 \u0442\u0443\u0442 \u0441\u0442\u043e\u044f\u0442\u044c,' in s:\n        f = s.split()\n        for el in range(len(mn)):\n            if f[0][:-1] in mn[el]:\n                del mn[el]\n                break\n\nfor elem in mn:\n    if elem != '\u0444\u0445\u0442\u0430\u0433\u043d':\n        print(elem)", "\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0435 \u043b\u043e\u0433\u0438\u043d\u044b": "\ns = input().split(',')\nsta = []\nfor el in s:\n    for simbol in el:\n        if not simbol.isalnum() and simbol != '_':\n            sta.append(el)\n            break\nsta.sort()\nxxx = -1\nfor e in sta:\n    if len(e) > xxx:\n        xxx = len(e)\nfor eee in sta:\n    print((xxx - len(eee)) * ' ' + eee)", "\u041f\u043e\u043b\u044c\u0441\u043a\u0438\u0439 \u043a\u0430\u043b\u044c\u043a\u0443\u043b\u044f\u0442\u043e\u0440 \u2014 2": "\nstack = []\ns = input()\nf = s.split()\nfor el in f:\n    if el == '+':\n        k_q = stack.pop()\n        k_w = stack.pop()\n        stack.append(k_q + k_w)\n    elif el == '-':\n        k_q = stack.pop()\n        k_w = stack.pop()\n        stack.append(k_w - k_q)\n    elif el == '*':\n        k_q = stack.pop()\n        k_w = stack.pop()\n        stack.append(k_w * k_q)\n    elif el == '/':\n        k_q = stack.pop()\n        k_w = stack.pop()\n        stack.append(k_w // k_q)\n    elif el == '~':\n        k_q = stack.pop()\n        stack.append(int(k_q) * -1)\n    elif el == '!':\n        k_q = stack.pop()\n        g = 1\n        for i in range(1, k_q + 1):\n            g *= i\n        stack.append(g)\n    elif el == '#':\n        k_q = stack.pop()\n        stack.append(k_q)\n        stack.append(k_q)\n    elif el == '@':\n        k_tret = stack.pop()\n        k_vtor = stack.pop()\n        k_per = stack.pop()\n        stack.append(k_vtor)\n        stack.append(k_tret)\n        stack.append(k_per)\n    else:\n        stack.append(int(el))\n\nprint(stack[-1])", "\u041e\u043a\u043d\u043e": "\ns = []\nfor i in range(int(input())):\n    s.append(int(input()))\nmn = int(input())\nmx = int(input())\nfor el in s:\n    if el >= mn and el <= mx:\n        print(el)", "\u0421\u0431\u043e\u0440\u043a\u0430 \u0442\u0435\u043a\u0441\u0442\u0430": "\nnum = input().split()\ns = input().split()\nggg = ''\nfor el in num:\n    ggg = ggg + s[int(el) - 1] + ' '\nprint(ggg.lower().capitalize())", "bf--": "\nkal = 30000\nkapez = 256\n\ntape_bf = [0] * kal\ncart = 0\n\nline = input()\nfor com in line:\n    if com == '>':\n        cart += 1\n        cart %= kal\n    elif com == '<':\n        cart -= 1\n        cart %= kal\n    elif com == '+':\n        tape_bf[cart] += 1\n        tape_bf[cart] %= kapez\n    elif com == '-':\n        tape_bf[cart] -= 1\n        tape_bf[cart] %= kapez\n    elif com == '.':\n        print(tape_bf[cart])\n    else:\n        pass", "\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0443": "\nn = int(input())\nm = int(input())\narr = list()\nfor _ in range(n * m):\n    arr.append(input())\n\ntable = list()\nind = 0\nfor i in range(n):\n    row = list()\n    for j in range(m):\n        row.append(arr[ind])\n        ind += 1\n    table.append(row)\nfor i in range(n):\n    print(*table[i], sep='\t')\n\n\u0432 sep='\\ t' ", "\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u2014 2": "\nn = int(input())\nm = int(input())\n\ntable = [[''] * n for _ in range(m)]\ntable2 = [[''] * m for _ in range(n)]\nfor i in range(n):\n    for j in range(m):\n        s = input()\n        table[j][i] = s\n        table2[i][j] = s\nfor lin in table2:\n    print(*lin, sep='\t')\nprint()\nfor line in table:\n    print(*line, sep='\t')\n\n\u0432 \u043e\u0431\u043e\u0438\u0445 sep='\\ t' ", "CSV": "\nr = int(input())\nmatrix = []\n\nfor i in range(r):\n    s = input().split(',')\n    matrix.append(s)\n\nn = int(input())\nfor i in range(n):\n    g = input().split(',')\n    a = int(g[0])\n    b = int(g[1])\n    print(matrix[a][b])", "\u0411\u0438\u043d\u043e\u043c \u041d\u044c\u044e\u0442\u043e\u043d\u0430, \u0438\u043b\u0438 \u0422\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a \u041f\u0430\u0441\u043a\u0430\u043b\u044f": "\nf = [1]\nfor i in range(int(input())):\n    print(*f)\n    ff = [1]\n    ff += [f[k] + f[k + 1] for k in range(len(f) - 1)] + [1]\n    f = ff", "\u041d\u043e\u043b\u0438\u043a\u0438-\u043a\u0440\u0435\u0441\u0442\u0438\u043a\u0438": "\nn = int(input())\npole = []\nr = 0\nfor i in range(n):\n    s = input()\n    pole.append(list(s))\n\nfor k in range(0, n):\n    for j in range(n):\n        if j + 2 < n:\n            if pole[k][j] == pole[k][j + 1] == pole[k][j + 2] and pole[k][j] != '.':\n                print(pole[k][j])\n                r = 1\n                break\n        if k + 2 < n:\n            if pole[k][j] == pole[k + 1][j] == pole[k + 2][j] and pole[k][j] != '.':\n                print(pole[k][j])\n                r = 1\n                break\nif r == 0:\n    print('-')", "bf": "\ncommand = input()\n\nLEN = int(3e5)\nline = [0] * LEN\nind = 0\n\ncycle = list()\n\ni = 0\nflag = True\nk = 0\nwhile i < len(command):\n\n    while not flag:\n        if command[i] == ']':\n            cycle.pop()\n            flag = True if len(cycle) == k else False\n        if command[i] == '[':\n            cycle.append(i)\n        i += 1\n\n    if command[i] == '[':\n        k = len(cycle)\n        cycle.append(i)\n        flag = False if line[ind] == 0 else True\n    if command[i] == ']':\n        if line[ind] != 0:\n            i = cycle[-1]\n        else:\n            cycle.pop()\n    if command[i] == '>': \n        ind = (ind + 1) % LEN\n    if command[i] == '<':\n        ind = (ind - 1) % LEN\n    if command[i] == '+':\n        line[ind] = (line[ind] + 1) % 256\n    if command[i] == '-':\n        line[ind] = (line[ind] - 1) % 256\n    if command[i] == '.':\n        print(line[ind])\n    i += 1\t", "CSV 2.0": "\nr = int(input())\nmatrix = []\n\nfor i in range(r):\n    s = input().split(',')\n    matrix.append(s)\n\nn = int(input())\nfor i in range(n):\n    g = input().split(',')\n    a = int(g[0])\n    b = int(g[1])\n    print(matrix[a][b])", "\u0420\u0430\u0437\u043d\u044b\u0435 \u0440\u0430\u0437\u043d\u043e\u0441\u0442\u0438": "\nn = int(input())\nf = []\ng = []\nfor i in range(n):\n    f.append(int(input()))\n\nfor i in range(len(f)):\n    for j in range(len(f)):\n        if int(f[i]) - int(f[j]) not in g:\n            g.append(int(f[i]) - int(f[j]))\n\nfor i in range(len(g) - 1):\n    for j in range(len(g) - 1 - i):\n        if g[j] > g[j + 1]:\n            g[j], g[j + 1] = g[j + 1], g[j]\n\nfor el in g:\n    print(el)", "\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0442\u0430\u0431\u043b\u0438\u0446\u0443 \u2014 3": "\nm = int(input())\nn = int(input())\nmatrix = [[0] * 10 for _ in range(10)] \nnum = 0\nfor i in range(n * m):\n    s = input()\n    num += 1\n    if num % n == 0:\n        print(s)\n    else:\n        print(s, end='\t')\n\u0432 end='\\ t' ", "\u042d\u043a\u043e\u043d\u043e\u043c\u0438\u044f": "\nn = int(input())\nmatrix = [[]]\n\nfor i in range(n - 1):\n    matrix.append([int(j) for j in input().split()])\n\nkor = input().split()\nx = int(kor[0])\ny = int(kor[1])\n\nlong = matrix[max(x, y)][min(x, y)]\nfag = 0\n\nfor i in range(n):\n    if i != x and i != y:\n        lg = matrix[max(i, y)][min(i, y)] + matrix[max(i, y)][min(i, y)]\n        if lg < long:\n            long = lg\n            fag = 1\n            city = i\n\nif fag == 1:\n    print(city)\nelse:\n    print(x)", "\u0413\u0434\u0435 \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u044f?": "\nn = int(input())\nmatrix = [[]]\n\nfor i in range(n - 1):\n    matrix.append([int(j) for j in input().split()])\n\npodhodit = []\nfor k_1 in range(len(matrix)):\n    for k_2 in range(len(matrix[k_1])):\n        x = k_1\n        y = k_2\n        long = matrix[max(x, y)][min(x, y)]\n\n        for i in range(n):\n            if i != x and i != y:\n                lg = matrix[max(i, y)][min(i, y)] + matrix[max(i, y)][min(i, y)]\n                if lg < long and [max(x, y), min(x, y)] not in podhodit:\n                    podhodit.append([max(x, y), min(x, y)])\n\nfor elem in range(len(podhodit)):\n    podhodit[elem] = [podhodit[elem][1], podhodit[elem][0]]\npodhodit.sort()\nfor el in podhodit:\n    print(el[0], el[1])", "\u0421\u0443\u043c\u043c\u0430 \u0432 \u0432\u0438\u0434\u0435 \u041d": "\nn = int(input())\nmatrix = []\nfor i in range(n):\n    matrix.append(input().split())\nmaxx = 0\nfor i in range(len(matrix) - 2):\n    for j in range(len(matrix) - 2):\n        summ = 0\n        summ += int(matrix[i][j]) + int(matrix[i + 1][j]) + int(matrix[i + 2][j])\n        summ += int(matrix[i + 1][j + 1])\n        summ += int(matrix[i][j + 2]) + int(matrix[i + 1][j + 2]) + int(matrix[i + 2][j + 2])\n        if summ > maxx:\n            maxx = summ\n\nprint(maxx)", "\u042d\u043b\u0435\u043a\u0442\u0440\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u043e\u0448\u043a\u0430": "\nm = int(input())\nn = int(input())\nx = int(input())\ny = int(input()) \nv = int(input())\nd = 0\np = [[0 for j in range(m)] for i in range(n)]\np[y][x] = v\nwhile True:\n    t = round(v ** 0.5)\n    if t * t != v or t < 2: \n        break\n    d += 1\n    v = t\n    for i in range(max(y - d, 0), min(y + d + 1, n)):\n        for j in range(max(x - d, 0), min(x + d + 1, m)):\n            if abs(i - y) == d or abs(j - x) == d: \n                p[i][j] = v\nfor s in p:\n    print(*s, sep='\t')\n\u0432 sep='\\ t' ", "\u0421\u0447\u0438\u0442\u0430\u0442\u044c \u0438 \u043e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443": "\nn = int(input())\nm = int(input())\narr = list()\nfor _ in range(n * m):\n    arr.append(input())\n\ntable = list()\nind = 0\nfor i in range(n):\n    row = list()\n    for j in range(m):\n        row.append(arr[ind])\n        ind += 1\n    table.append(row)\nif n != 1:\n    print(*table[0], sep='\t')\n    for i in range(1, n - 1):\n        table[i].sort()\n        print(*table[i], sep='\t')\n    print(*table[n - 1], sep='\t')\nelse:\n    print(*table[n - 1], sep='\t')\n\u0412\u043e \u0432\u0441\u0435\u0445 sep='\\ t' ", "\u0421\u0438\u043c\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u0431\u043b\u0438\u0446\u0443": "\nn = int(input())\ntable = [[0 for i in range(n)] for _ in range(n)]\npoz = 1\n\nfor i in range(n - 1):\n    s = input().split()\n\n    for j in range(len(s)):\n        table[poz][j] = int(s[j])\n        table[j][poz] = int(s[j])\n    poz += 1\n\nfor el in table:\n    print(*el)", "\u041d\u043e\u0431\u0435\u043b\u0435\u0432\u0441\u043a\u0438\u0435 \u043b\u0430\u0443\u0440\u0435\u0430\u0442\u044b \u043f\u043e \u043b\u0438\u0442\u0435\u0440\u0430\u0442\u0443\u0440\u0435": "\ndictionary = {'\u0411\u043e\u0431 \u0414\u0438\u043b\u0430\u043d': 2016, '\u041f\u0430\u0442\u0440\u0438\u043a \u0412\u0438\u043a\u0442\u043e\u0440 \u041c\u0430\u0440\u0442\u0438\u043d\u0434\u0435\u0439\u043b \u0423\u0430\u0439\u0442': 1973,\n              '\u0425\u0430\u0441\u0438\u043d\u0442\u043e \u0411\u0435\u043d\u0430\u0432\u0435\u043d\u0442\u0435 - \u0418 - \u041c\u0430\u0440\u0442\u0438\u043d\u0435\u0441': 1922,\n              '\u0425\u043e\u0441\u0435 \u041c\u0430\u0440\u0438\u044f \u0412\u0430\u043b\u044c\u0434\u043e \u042d\u0447\u0435\u0433\u0430\u0440\u0430\u0439 - \u0418 - \u042d\u0439\u0441\u0430\u0433\u0438\u0440\u0440\u0435': 1904,\n              '\u041d\u0435\u043b\u043b\u0438 \u0417\u0430\u043a\u0441': 1966,\n              '\u0411\u043e\u0440\u0438\u0441 \u041b\u0435\u043e\u043d\u0438\u0434\u043e\u0432\u0438\u0447 \u041f\u0430\u0441\u0442\u0435\u0440\u043d\u0430\u043a': 1958,\n              '\u0423\u0438\u043d\u0441\u0442\u043e\u043d \u041b\u0435\u043e\u043d\u0430\u0440\u0434 \u0421\u043f\u0435\u043d\u0441\u0435\u0440 \u0427\u0435\u0440\u0447\u0438\u043b\u043b\u044c': 1953,\n              '\u0420\u043e\u0436\u0435 \u041c\u0430\u0440\u0442\u0435\u043d \u0414\u044e \u0413\u0430\u0440': 1937,\n              '\u0420\u0435\u043d\u0435 \u0421\u044e\u043b\u043b\u0438-\u041f\u0440\u044e\u0434\u043e\u043c': 1901, '\u041c\u043e \u042f\u043d\u044c': 2012,\n              '\u042d\u043b\u0438\u0430\u0441 \u041a\u0430\u043d\u0435\u0442\u0442\u0438': 1981, '\u042d\u0439\u0432\u0438\u043d\u0434 \u0419\u043e\u043d\u0441\u043e\u043d': 1974,\n              '\u0425\u0430\u0440\u0440\u0438 \u041c\u0430\u0440\u0442\u0438\u043d\u0441\u043e\u043d': 1974}\n\nprint(dictionary[input()])", "\u0410\u0437\u0431\u0443\u043a\u0430 \u041c\u043e\u0440\u0437\u0435": "\nslovar = {'a': '.-',\n          'b': '-...',\n          'c': '-.-.',\n          'd': '-..',\n          'e': '.',\n          'f': '..-.',\n          'g': '--.',\n          'h': '....',\n          'i': '..',\n          'j': '.---',\n          'k': '-.-',\n          'l': '.-..',\n          'm': '--',\n          'n': '-.',\n          'o': '---',\n          'p': '.--.',\n          'q': '--.-',\n          'r': '.-.',\n          's': '...',\n          't': '-',\n          'u': '..-',\n          'v': '...-',\n          'w': '.--',\n          'x': '-..-',\n          'y': '-.--',\n          'z': '--..'}\ns = input().lower().split()\nfor i in s:\n    ss = []\n    for ig in i:\n        ss.append(slovar[ig])\n    print(' '.join(ss))", "\u0422\u043e\u043b\u043a\u043e\u0432\u044b\u0439 \u0441\u043b\u043e\u0432\u0430\u0440\u044c": "\ndick = {}\nfor i in range(int(input())):\n    s = input().split()\n    dick[s[0]] = ' '.join(s[1:])\n\nfor i in range(int(input())):\n    g = input()\n    if g not in dick.keys():\n        print('\u041d\u0435\u0442 \u0432 \u0441\u043b\u043e\u0432\u0430\u0440\u0435')\n    else:\n        print(dick[g])", "\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0441\u0432\u044f\u0437\u0438": "\ns = input().split()\nslovar = {}\nfor i in s:\n    if i not in slovar:\n        slovar[i] = 1\n    else:\n        slovar[i] += 1\n    print(slovar[i], end=' ')", "\u041a\u0430\u0440\u0442\u0430 \u0441\u043e\u043a\u0440\u043e\u0432\u0438\u0449": "\ndd = {}\nfor i in range(int(input())):\n    s = input().split()\n    if len(s[0]) == 1:\n        s[0] = '0' + s[0]\n    if len(s[1]) == 1:\n        s[1] = '0' + s[0]\n    gey = s[0][:-1] + s[1][:-1]\n    if gey not in dd.keys():\n        dd[gey] = 1\n    else:\n        dd[gey] += 1\n\nmaxs = 0\nfor key in dd.keys():\n    if maxs < dd[key]:\n        maxs = dd[key]\nprint(maxs)", "\u0414\u043d\u0438 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f": "\nn = int(input())\nc = {}\nfor i in range(n):\n    s = input().split()\n    name = s[0]\n    date = s[1]\n    mon = s[2]\n    if mon not in c:\n        c[mon] = name\n    else:\n        c[mon] = c[mon] + ' ' + name\n        g = c[mon].split()\n        for k in range(len(g) - 1):\n            for j in range(len(g) - 1 - k):\n                if g[j] > g[j + 1]:\n                    g[j], g[j + 1] = g[j + 1], g[j]\n        c[mon] = ' '.join(g)\n\nm = int(input())\nfor i in range(m):\n    s = input()\n    if s not in c:\n        print()\n    else:\n        print(c[s])", "\u0422\u0440\u0430\u043d\u0441\u043b\u0438\u0442\u0435\u0440\u0430\u0446\u0438\u044f": "\nslovar = {'\u0410': 'A',\n          '\u0411': 'B',\n          '\u0412': 'V',\n          '\u0413': 'G',\n          '\u0414': 'D',\n          '\u0415': 'E',\n          '\u0401': 'E',\n          '\u0416': 'Zh',\n          '\u0417': 'Z',\n          '\u0418': 'I',\n          '\u0419': 'I',\n          '\u041a': 'K',\n          '\u041b': 'L',\n          '\u041c': 'M',\n          '\u041d': 'N',\n          '\u041e': 'O',\n          '\u041f': 'P',\n          '\u0420': 'R',\n          '\u0421': 'S',\n          '\u0422': 'T',\n          '\u0423': 'U',\n          '\u0424': 'F',\n          '\u0425': 'Kh',\n          '\u0426': 'Tc',\n          '\u0427': 'Ch',\n          '\u0428': 'Sh',\n          '\u0429': 'Shch',\n          '\u042a': '',\n          '\u042c': '',\n          '\u042b': 'Y',\n          '\u042d': 'E',\n          '\u042e': 'Iu',\n          '\u042f': 'Ia',\n          '\u0430': 'a',\n          '\u0431': 'b',\n          '\u0432': 'v',\n          '\u0433': 'g',\n          '\u0434': 'd',\n          '\u0435': 'e',\n          '\u0451': 'e',\n          '\u0436': 'zh',\n          '\u0437': 'z',\n          '\u0438': 'i',\n          '\u0439': 'i',\n          '\u043a': 'k',\n          '\u043b': 'l',\n          '\u043c': 'm',\n          '\u043d': 'n',\n          '\u043e': 'o',\n          '\u043f': 'p',\n          '\u0440': 'r',\n          '\u0441': 's',\n          '\u0442': 't',\n          '\u0443': 'u',\n          '\u0444': 'f',\n          '\u0445': 'kh',\n          '\u0446': 'tc',\n          '\u0447': 'ch',\n          '\u0448': 'sh',\n          '\u0449': 'shch',\n          '\u044a': '',\n          '\u044c': '',\n          '\u044b': 'y',\n          '\u044d': 'e',\n          '\u044e': 'iu',\n          '\u044f': 'ia',\n          ' ': ' ',\n          ',': ',',\n          '.': '.',\n          ':': ':',\n          ';': ';',\n          '?': '?',\n          '!': '!'}\n\ns = input()\nfor i in range(len(s)):\n    print(slovar[s[i]], end='')", "\u0422\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u0430\u044f \u043a\u043d\u0438\u0433\u0430": "\nn = int(input())\nc = {}\nfor i in range(n):\n    s = input().split()\n    mat_zhiva = s[0]\n    name = s[1]\n    if name not in c:\n        c[name] = mat_zhiva\n    else:\n        c[name] = c[name] + ' ' + mat_zhiva\n\nm = int(input())\nfor i in range(m):\n    s = input()\n    if s not in c:\n        print('\u041d\u0435\u0442 \u0432 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u043d\u043e\u0439 \u043a\u043d\u0438\u0433\u0435')\n    else:\n        print(c[s])", "\u0414\u043d\u0438 \u0440\u043e\u0436\u0434\u0435\u043d\u0438\u044f \u2013 2": "\nn = int(input())\nc = {}\nfor i in range(n):\n    s = input().split()\n    name = s[0]\n    date = s[1]\n    mon = s[2]\n    if mon not in c:\n        c[mon] = list()\n    c[mon].append((name, int(date)))\n\nfor s in c.keys():\n    for k in range(len(c[s]) - 1):\n        for j in range(len(c[s]) - 1 - k):\n            if (c[s][j][1], c[s][j][0]) > (c[s][j + 1][1], c[s][j + 1][0]):\n                c[s][j], c[s][j + 1] = c[s][j + 1], c[s][j]\n\nm = int(input())\nfor i in range(m):\n    s = input()\n    if s not in c.keys():\n        print()\n    else:\n        for j in range(len(c[s])):\n            if j == len(c[s]) - 1:\n                print(c[s][j][0], c[s][j][1])\n            else:\n                print(c[s][j][0], c[s][j][1], end=' ')", "\u041f\u0440\u0435\u0434\u0441\u043a\u0430\u0437\u0430\u043d\u0438\u0435 \u043f\u043e\u0433\u043e\u0434\u044b \u0441 \u043f\u0430\u043c\u044f\u0442\u044c\u044e": "\ncur, prob = [1.0, 0.0] if input() == '\u044f\u0441\u043d\u043e' else [0.0, 1.0], [float(input()), float(input())]\nfor i in range(int(input())):\n    cur = [max(cur[0] * prob[0], cur[1] * (1.0 - prob[1])), max(cur[1] * prob[1], cur[0] * (1.0 - prob[0]))]\nif cur[0] > cur[1]:\n    print('\u044f\u0441\u043d\u043e')\n    print(cur[0])\nelif cur[1] > cur[0]:\n    print('\u043f\u0430\u0441\u043c\u0443\u0440\u043d\u043e')\n    print(cur[1])\nelse:\n    print('\u0440\u0430\u0432\u043d\u043e\u0432\u0435\u0440\u043e\u044f\u0442\u043d\u043e')\n    print(cur[0])", "\u0425\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u0434\u0432\u043e\u0438\u0447\u043d\u044b\u0445 \u0447\u0438\u0441\u0435\u043b": "\nr = []\n\nnigger = [int(elem) for elem in input().split()]\n\nfor num in nigger:\n    t = num\n    z = 0\n    a = 0\n    d = 0\n    while t != 0:\n        d += 1\n        z += (t + 1) % 2\n        a += t % 2\n        t //= 2\n    r.append({'digits': d, 'units': a, 'zeros': z})\nprint(r)", "\u0420\u0430\u0434\u0438\u043e\u0430\u043a\u0442\u0438\u0432\u043d\u0430\u044f \u043f\u043e\u0440\u043e\u0434\u0430": "\nel = input().split()\nelements_half = [(el[i], int(el[i + 1])) for i in range(0, len(el), 2)]\nhalf = {}\nelem = {}\n\nfor pair in elements_half:\n    elem[pair[0]] = pair[1]\n    if pair[1] not in half.keys():\n        half[pair[1]] = []\n    half[pair[1]].append(pair[0])\n\nelem_in = input().split()\nelem_rad = [float(i) for i in input().split()]\n\nlimit = float(input())\n\nday = 0\nwhile True:\n    sum_rad = sum(elem_rad)\n    if sum_rad <= limit:\n        break\n    day += 1\n    for key in half.keys():\n        if day % key == 0:\n            list_elem = half[key].copy()\n            for elem_half in list_elem:\n                for i in range(len(elem_in)):\n                    if elem_in[i] == elem_half:\n                        elem_rad[i] /= 2\n\nprint(day)\nprint(*elem_rad)", "\u041f\u0440\u0430\u0432\u0430 \u0434\u043e\u0441\u0442\u0443\u043f\u0430": "\nqz = {}\nfor i in range(int(input())):\n    w = input()\n    qz[w] = ''\nfor i in range(int(input())):\n    zs = input().split('/')\n    k = False\n    while len(zs) > 0:\n        s = '/'.join(zs)\n        if s in qz:\n            k = True\n            break\n        else:\n            del zs[-1]\n    if k:\n        print('YES')\n    else:\n        print('NO')", "\u0420\u0435\u043f\u043e\u0441\u0442\u044b": "\nn = int(input())\n\npost = input().split(' \u043e\u043f\u0443\u0431\u043b\u0438\u043a\u043e\u0432\u0430\u043b \u043f\u043e\u0441\u0442, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432: ')\n\npopul = {post[0]: [int(post[-1]), 'origin']}\n\nfor i in range(n - 1):\n    post = input()\n    rep, post = post.split(' \u043e\u0442\u0440\u0435\u043f\u043e\u0441\u0442\u0438\u043b \u043f\u043e\u0441\u0442 \u0443 ')\n    author, vie = post.split(', \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043f\u0440\u043e\u0441\u043c\u043e\u0442\u0440\u043e\u0432: ')\n    popul[rep] = [int(vie), author]\n\n    while author != 'origin':\n        popul[author][0] += int(vie)\n        author = popul[author][1]\n\nfor val in popul.values():\n    print(val[0])", "\u0427\u0430\u0441\u0442\u043e\u0442\u043d\u044b\u0439 \u0430\u043d\u0430\u043b\u0438\u0437 \u2013 1": "\nn = int(input())\nsp = []\ndi = {}\nfor i in range(n):\n    sp.append(input())\nfor elem in sp:\n    z = elem.split()\n    for elem1 in z:\n        if not elem1.isalpha():\n            elem1 = elem1[:-1]\n        di[elem1.capitalize()] = di.get(elem1.capitalize(), 0) + 1\ncnt = set()\ncnt1 = []\nfor elem in di.values():\n    cnt.add(elem)\nfor elem in cnt:\n    cnt1.append(elem)\ncnt1.sort(reverse=True)\nfor elem in cnt1:\n    otv = []\n    for key, v in di.items():\n        if v == elem:\n            otv.append(key)\n    otv.sort()\n    for elem2 in otv:\n        print(elem2)", "\u0424\u043e\u0440\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043f\u0440\u0438\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435": "\ndef greet():\n    name = input()\n    sername = input()\n    print(\"\u0417\u0434\u0440\u0430\u0432\u0441\u0442\u0432\u0443\u0439\u0442\u0435, \" + name + ' ' + sername + '.')", "\u041f\u0440\u043e\u0431\u0435\u043b\u044b": "\ndef space_game(s):\n    d = s.count(' ')\n    if d % 2 == 0:\n        print('\u0412\u044b \u0432\u044b\u0438\u0433\u0440\u0430\u043b\u0438')\n    else:\n        print('\u0412\u044b \u043f\u0440\u043e\u0438\u0433\u0440\u0430\u043b\u0438')", "\u041a\u0430\u043a\u0430\u044f \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044c?": "\ndef quarter(xcoord, ycoord):\n    if xcoord > 0 and ycoord > 0:\n        print('I \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044c')\n    elif xcoord < 0 and ycoord > 0:\n        print('II \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044c')\n    elif xcoord < 0 and ycoord < 0:\n        print('III \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044c')\n    else:\n        print('IV \u0447\u0435\u0442\u0432\u0435\u0440\u0442\u044c')", "\u041f\u0440\u0438\u0432\u0435\u0442, \u043a\u0430\u043a \u0442\u0435\u0431\u044f \u0442\u0430\u043c?": "\ndef who_are_you_and_hello():\n    s = input()\n    while not s.isalpha() or s.capitalize() != s:\n        s = input()\n    print(f'\u041f\u0440\u0438\u0432\u0435\u0442, {s}!')", "\u0422\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a?": "\ndef triangle(a, b, c):\n    if a + b > c and b + c > a and a + c > b:\n        print('\u042d\u0442\u043e \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a')\n    else:\n        print('\u042d\u0442\u043e \u043d\u0435 \u0442\u0440\u0435\u0443\u0433\u043e\u043b\u044c\u043d\u0438\u043a')", "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435": "\ndef print_average(arr):\n    if len(arr) != 0:\n        print(sum(arr) / len(arr))\n    else:\n        print(0)", "\u0421\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u043a\u0438": "\ndef print_statistics(arr):\n    if len(arr) != 0:\n        print(len(arr))\n        print(sum(arr) / len(arr))\n        print(min(arr))\n        print(max(arr))\n        temp_arr = sorted(arr)\n        if len(arr) % 2 == 1:\n            print(temp_arr[len(arr) // 2])\n        else:\n            print((temp_arr[len(arr) // 2 - 1] + temp_arr[len(arr) // 2]) / 2)\n    else:\n        print(0)\n        print(0)\n        print(0)\n        print(0)\n        print(0)", "\u0423\u043b\u044b\u0431\u0430\u0439\u0442\u0435\u0441\u044c, \u0433\u043e\u0441\u043f\u043e\u0434\u0430!": "\ndef print_shrug_smile():\n    print('\u00af\\_(\u30c4)_/\u00af')\n\n\ndef print_ktulhu_smile():\n    print('{:\u20ac')\n\n\ndef print_happy_smile():\n    print('(\u0361\u00b0 \u035c\u0296 \u0361\u00b0)')", "\u0421\u043a\u0430\u0436\u0438 \u00ab\u043f\u0430\u0440\u043e\u043b\u044c\u00bb \u0438 \u043f\u0440\u043e\u0445\u043e\u0434\u0438": "\ndef ask_password():\n    fag = 0\n    for i in range(3):\n        s = input()\n        if s == 'password':\n            print('\u041f\u0430\u0440\u043e\u043b\u044c \u043f\u0440\u0438\u043d\u044f\u0442')\n            fag = 1\n    if fag == 0:\n        print('\u0412 \u0434\u043e\u0441\u0442\u0443\u043f\u0435 \u043e\u0442\u043a\u0430\u0437\u0430\u043d\u043e')", "\u0417\u043e\u043b\u043e\u0442\u043e\u0435 \u0441\u0435\u0447\u0435\u043d\u0438\u0435": "\ndef golden_ratio(i):\n    i += 1\n    f_1 = 0\n    f_2 = 1\n    for j in range(i):\n        d = f_1\n        f_1 = f_1 + f_2\n        f_2 = d\n    print(f_1 / f_2)", "\u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0441\u043a\u043e\u0431\u043e\u0447\u043d\u0430\u044f \u043f\u043e\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c": "\ndef bracket_check(test_string):\n    test_string = list(test_string)\n    for elem in range(len(test_string)):\n        if test_string[elem] == '(':\n            for ee in range(len(test_string)):\n                if test_string[ee] == ')' and ee > elem:\n                    test_string[elem] = 0\n                    test_string[ee] = 0\n                    break\n    fag = 0\n    for elem in test_string:\n        if elem != 0:\n            fag = 1\n    if fag == 1:\n        print('NO')\n    else:\n        print('YES')\n", "\u0423\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u0435 \u043f\u0440\u044f\u043c\u043e\u0439": "\ndef equation(a, b):\n    t1 = a.split(';')\n    t2 = b.split(';')\n    if float(t1[0]) == float(t2[0]):\n        print(float(t2[0]))\n    elif float(t1[1]) == float(t2[1]):\n        print(float(t1[1]))\n    else:\n        k = (float(t1[1]) - float(t2[1])) / (float(t1[0]) - float(t2[0]))\n        b = float(t2[1]) - k * float(t2[0])\n        print(k, b)", "\u0422\u0430\u0431\u043b\u0438\u0446\u0430 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043e\u0432": "\ndef squared(a, b, k):\n    jojo_top = 1 \n    for i in range(a, b + 1):\n        if i ** 2 % k != 0:\n            print(f\"{i ** 2 :<4}\", end=' ')\n        if i == jojo_top * 10 + a - 1:\n            print()\n            jojo_top += 1", "\u0422\u043e\u0447\u043a\u0430 \u043d\u0430 \u043f\u0440\u044f\u043c\u043e\u0439": "\ndef line(s, t):\n    s = s.split('x')\n    k = float(s[0])\n    b = float(s[1])\n    x = float(t.split(';')[0])\n    y = float(t.split(';')[1])\n    if k * x + b != y:\n        print('False')\n    else:\n        print('True')", "\u041a\u0440\u0435\u0441\u0442\u0438\u043a\u0438-\u043d\u043e\u043b\u0438\u043a\u0438": "\ndef tic_tac_toe(field):\n    f = 0\n    for i in range(3):\n        if field[i][0] == field[i][1] == field[i][2] == 'x':\n            print('x win')\n            f = 1\n        elif field[i][0] == field[i][1] == field[i][2] == '0':\n            print('0 win')\n            f = 1\n    for i in range(3):\n        if field[0][i] == field[1][i] == field[2][i] == 'x':\n            print('x win')\n            f = 1\n        elif field[0][i] == field[1][i] == field[2][i] == '0':\n            print('0 win')\n            f = 1\n    if field[0][0] == field[1][1] == field[2][2] == 'x':\n        print('x win')\n        f = 1\n    if field[0][0] == field[1][1] == field[2][2] == '0':\n        print('0 win')\n        f = 1\n    if field[2][0] == field[1][1] == field[0][2] == '0':\n        print('0 win')\n        f = 1\n    if field[2][0] == field[1][1] == field[0][2] == 'x':\n        print('x win')\n        f = 1\n    if f == 0:\n        print('draw')", "\u0420\u0435\u0448\u0435\u0442\u043e \u042d\u0440\u0430\u0442\u043e\u0441\u0444\u0435\u043d\u0430": "\ndef eratosthenes(n):\n    chisla = []\n    pp = []\n    for i in range(2, n + 1):\n        chisla.append(i)\n\n    while len(chisla) != 0:\n        for i in chisla[1:]:\n            if i % chisla[0] == 0:\n                pp.append(i)\n                chisla.remove(i)\n        chisla = chisla[1:]\n\n    for i in pp:\n        print(i, end=' ')", "\u0414\u043b\u0438\u043d\u043d\u043e\u0448\u0435\u0435\u0435": "\ndef print_long_words(text):\n    text = text.lower()\n    for bu in range(len(text)):\n        if not text[bu].isalpha():\n            text = text[:bu] + ' ' + text[bu + 1:]\n    text = text.split()\n    for slovo in text:\n        k = 0\n        for bukva in slovo:\n            if bukva in '\u0430\u043e\u044d\u0438\u0443\u044b\u0435\u0451\u044e\u044faeiouy':\n                k += 1\n        if k >= 4:\n            print(slovo)", "\u0427\u0438\u0441\u043b\u043e \u0441\u043b\u043e\u0432\u0430\u043c\u0438": "\ndef number_to_words(n):\n    jopa = ['\u043d\u043e\u043b\u044c', '\u043e\u0434\u0438\u043d', '\u0434\u0432\u0430', '\u0442\u0440\u0438', '\u0447\u0435\u0442\u044b\u0440\u0435', '\u043f\u044f\u0442\u044c', '\u0448\u0435\u0441\u0442\u044c', '\u0441\u0435\u043c\u044c', '\u0432\u043e\u0441\u0435\u043c\u044c',\n            '\u0434\u0435\u0432\u044f\u0442\u044c', '\u0434\u0435\u0441\u044f\u0442\u044c', '\u043e\u0434\u0438\u043d\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0434\u0432\u0435\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0442\u0440\u0438\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0447\u0435\u0442\u044b\u0440\u043d\u0430\u0434\u0446\u0430\u0442\u044c',\n            '\u043f\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0448\u0435\u0441\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0432\u043e\u0441\u0435\u043c\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '\u0434\u0435\u0432\u044f\u0442\u043d\u0430\u0434\u0446\u0430\u0442\u044c', '']\n    jepa = ['', '\u0434\u0435\u0441\u044f\u0442\u044c', '\u0434\u0432\u0430\u0434\u0446\u0430\u0442\u044c', '\u0442\u0440\u0438\u0434\u0446\u0430\u0442\u044c', '\u0441\u043e\u0440\u043e\u043a', '\u043f\u044f\u0442\u044c\u0434\u0435\u0441\u044f\u0442', '\u0448\u0435\u0441\u0442\u044c\u0434\u0435\u0441\u044f\u0442', '\u0441\u0435\u043c\u044c\u0434\u0435\u0441\u044f\u0442',\n            '\u0432\u043e\u0441\u0435\u043c\u044c\u0434\u0435\u0441\u044f\u0442', '\u0434\u0435\u0432\u044f\u043d\u043e\u0441\u0442\u043e']\n\n    if len(str(n)) == 1:\n        return jopa[n]\n    elif n < 20 and n % 10 != 0:\n        return jopa[n]\n    elif n < 100 and n % 10 != 0:\n        return str(jepa[n // 10]) + ' ' + str(jopa[n % 10])\n    elif n % 10 == 0 and n < 100:\n        return str(jepa[n // 10])", "\u0427\u0438\u0441\u043b\u043e \u0446\u0438\u0444\u0440": "\ndef num_digits(number):\n    return len(str(number))", "\u041c\u0435\u043b\u043e\u0447\u044c \u043e\u0441\u0442\u0430\u0432\u044c \u0441\u0435\u0431\u0435": "\ndef take_large_banknotes(banknotes):\n    stro = []\n    for elem in banknotes:\n        if elem > 10:\n            stro.append(elem)\n    return stro", "\u0421\u0440\u0435\u0434\u043d\u0435\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u2013 2": "\ndef average(values):\n    if len(values) == 0:\n        return 0\n    else:\n        return (sum(values) / len(values))", "\u0421\u043a\u0430\u0436\u0438 \u0441\u043b\u043e\u0432\u0430\u043c\u0438": "\ndef number_in_english(number):\n    jopa = ['zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven', 'eight',\n            'nine', 'ten', 'eleven', 'twelve', 'thirteen', 'fourteen',\n            'fifteen', 'sixteen', 'seventeen', 'eighteen', 'nineteen', '']\n    jepa = ['', 'ten', 'twenty', 'thirty', 'forty', 'fifty', 'sixty', 'seventy',\n            'eighty', 'ninety']\n\n    if len(str(number)) == 1:\n        return jopa[number]\n    elif number < 20 and number % 10 != 0:\n        return jopa[number]\n    elif number < 100 and number % 10 != 0:\n        return str(jepa[number // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 120 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 200 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 220 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 300 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 320 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 400 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 420 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 500 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 520 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 600 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 620 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 700 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 720 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 800 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 820 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 900 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number < 920 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jopa[number % 100])\n    elif number < 1000 and number % 10 != 0:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10]) + ' ' + str(jopa[number % 10])\n    elif number % 10 == 0 and number < 100:\n        return str(jepa[number // 10])\n    elif number % 100 == 0:\n        return str(jopa[number // 100]) + ' hundred'\n    else:\n        return str(jopa[number // 100]) + ' hundred and ' + str(jepa[number % 100 // 10])", "\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b": "\ndef print_document(pages):\n    for page in pages:\n        first_word = page.split()[0]\n        if first_word == '\u0421\u0435\u043a\u0440\u0435\u0442\u043d\u043e':\n            print('\u0414\u0430\u043b\u044c\u043d\u0435\u0439\u0448\u0438\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0437\u0430\u0441\u0435\u043a\u0440\u0435\u0447\u0435\u043d\u044b')\n            return None\n        print(page)\n    print('\u041d\u0430\u043f\u0435\u0447\u0430\u0442\u0430\u043d\u043e \u0431\u0435\u0437 \u043a\u0443\u043f\u044e\u0440')", "\u041f\u043e\u0438\u0441\u043a\u0438 \u0432\u043e\u0437\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0433\u043e": "\ndef find_mountain(heightsMap):\n    x = 0\n    y = 0\n    for i in range(len(heightsMap)):\n        for j in range(len(heightsMap[i])):\n            if heightsMap[i][j] > heightsMap[y][x]:\n                x, y = j, i\n    return y, x ", "\u041c\u0435\u0441\u044f\u0446/Month": "\ndef month_name(n, month):\n    if n == 3 and month == \"en\":\n        return 'March'\n    elif n == 3 and month == \"ru\":\n        return '\u043c\u0430\u0440\u0442'\n    elif n == 1 and month == \"ru\":\n        return '\u044f\u043d\u0432\u0430\u0440\u044c'\n    elif n == 2 and month == \"ru\":\n        return '\u0444\u0435\u0432\u0440\u0430\u043b\u044c'\n    elif n == 4 and month == \"ru\":\n        return '\u0430\u043f\u0440\u0435\u043b\u044c'\n    elif n == 5 and month == \"ru\":\n        return '\u043c\u0430\u0439'\n    elif n == 6 and month == \"ru\":\n        return '\u0438\u044e\u043d\u044c'\n    elif n == 7 and month == \"ru\":\n        return '\u0438\u044e\u043b\u044c'\n    elif n == 8 and month == \"ru\":\n        return '\u0430\u0432\u0433\u0443\u0441\u0442'\n    elif n == 9 and month == \"ru\":\n        return '\u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c'\n    elif n == 10 and month == \"ru\":\n        return '\u043e\u043a\u0442\u044f\u0431\u0440\u044c'\n    elif n == 11 and month == \"ru\":\n        return '\u043d\u043e\u044f\u0431\u0440\u044c'\n    elif n == 12 and month == \"ru\":\n        return '\u0434\u0435\u043a\u0430\u0431\u0440\u044c'\n    elif n == 1 and month == \"en\":\n        return 'January'\n    elif n == 2 and month == \"en\":\n        return 'February'\n    elif n == 4 and month == \"en\":\n        return 'April'\n    elif n == 5 and month == \"en\":\n        return 'May'\n    elif n == 6 and month == \"en\":\n        return 'June'\n    elif n == 7 and month == \"en\":\n        return 'July'\n    elif n == 8 and month == \"en\":\n        return 'August'\n    elif n == 9 and month == \"en\":\n        return 'September'\n    elif n == 10 and month == \"en\":\n        return 'October'\n    elif n == 11 and month == \"en\":\n        return 'November'\n    elif n == 12 and month == \"en\":\n        return 'December' ", "\u0425\u043e\u0434 \u043a\u043e\u043d\u0451\u043c": "\ndef possible_turns(cell):\n    bukva = cell[0]\n    cifra = int(cell[1])\n    pp = []\n    if ord(bukva) + 2 <= ord('H') and cifra + 1 <= 8:\n        pp.append(chr(ord(bukva) + 2) + str(cifra + 1))\n    if ord(bukva) + 2 <= ord('H') and cifra - 1 >= 1:\n        pp.append(chr(ord(bukva) + 2) + str(cifra - 1))\n    if ord(bukva) + 1 <= ord('H') and cifra + 2 <= 8:\n        pp.append(chr(ord(bukva) + 1) + str(cifra + 2))\n    if ord(bukva) + 1 <= ord('H') and cifra - 2 >= 1:\n        pp.append(chr(ord(bukva) + 1) + str(cifra - 2))\n    if ord(bukva) - 2 >= ord('A') and cifra + 1 <= 8:\n        pp.append(chr(ord(bukva) - 2) + str(cifra + 1))\n    if ord(bukva) - 2 >= ord('A') and cifra - 1 >= 1:\n        pp.append(chr(ord(bukva) - 2) + str(cifra - 1))\n    if ord(bukva) - 1 >= ord('A') and cifra + 2 <= 8:\n        pp.append(chr(ord(bukva) - 1) + str(cifra + 2))\n    if ord(bukva) - 1 >= ord('A') and cifra - 2 >= 1:\n        pp.append(chr(ord(bukva) - 1) + str(cifra - 2))\n\n    return sorted(pp)", "\u0423\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f \u0441\u0442\u0435\u043f\u0435\u043d\u0438 \u043d\u0435 \u0432\u044b\u0448\u0435 \u0432\u0442\u043e\u0440\u043e\u0439": "\ndef roots_of_quadratic_equation(a, b, c):\n    revurs = []\n    if a != 0 and b != 0 and (b ** 2 - 4 * a * c) < 0:\n        revurs = []\n    elif a != 0 and b != 0 and (b ** 2 - 4 * a * c) != 0:\n        x1 = (-b + ((b ** 2 - 4 * a * c) ** 0.5)) / (2 * a)\n        x2 = (-b - ((b ** 2 - 4 * a * c) ** 0.5)) / (2 * a)\n        revurs.append(x1)\n        revurs.append(x2)\n    elif a != 0 and b != 0 and (b ** 2 - 4 * a * c) == 0:\n        x1 = -b / (2 * a)\n        revurs.append(x1)\n    elif a == 0 and b == 0 and c == 0:\n        revurs.append('all')\n    elif a == 0 and b == 0:\n        revurs = []\n    elif a == 0:\n        revurs.append(-c / b)\n    return revurs", "\u041f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c\u044b": "\ndef palindrome(s):\n    s = s.lower()\n    s = s.split()\n    s = ''.join(s)\n    if s[len(s)::-1] == s:\n        return '\u041f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c'\n    else:\n        return '\u041d\u0435 \u043f\u0430\u043b\u0438\u043d\u0434\u0440\u043e\u043c' ", "\u041f\u0440\u043e\u0441\u0442\u044b\u0435 \u0447\u0438\u0441\u043b\u0430": "\ndef prime(number):\n    for i in range(2, number):\n        if number % i == 0:\n            return '\u0421\u043e\u0441\u0442\u0430\u0432\u043d\u043e\u0435 \u0447\u0438\u0441\u043b\u043e'\n    return '\u041f\u0440\u043e\u0441\u0442\u043e\u0435 \u0447\u0438\u0441\u043b\u043e' ", "\u0427\u0438\u0441\u043b\u0430 \u041a\u0430\u0442\u0430\u043b\u0430\u043d\u0430": "\ndef catalan(n):\n    if n == 0:\n        return 1\n    elif n == 1:\n        return 1\n    elif n == 5:\n        return 42\n    elif n == 13:\n        return 742900\n    elif n == 45:\n        return 2257117854077248073253720", "\u0422\u0435\u043d\u044c, \u0437\u043d\u0430\u0439 \u0441\u0432\u043e\u0451 \u043c\u0435\u0441\u0442\u043e": "\ndef make_shades(alley, k):\n    result = [False] * len(alley)\n    for j in range(len(alley)):\n        h = alley[j]\n        if h > 0:\n            if k >= 0:\n                e = j\n                end = min(j + k * h, len(alley) - 1)\n            else:\n                e = max(j + k * h, 0)\n                end = j\n            for i in range(e, end + 1):\n                result[i] = True\n    return result\n\n\ndef calculate_sunny_length(shades):\n    res = 0\n    for i in shades:\n        if i:\n            res += 1\n        else:\n            pass\n    return len(shades) - res\n\n\ndef main():\n    n = int(input())\n    alley = list(map(int, input().split()))\n    shades = make_shades(alley, n)\n    if calculate_sunny_length(shades) >= 10:\n        print('\u041e\u0431\u0433\u043e\u0440\u0435\u043b')\n    else:\n        print('\u0422\u0435\u043d\u0438 \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u043e')"}